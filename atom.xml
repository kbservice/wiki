<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zthxxx&#39;s Wiki</title>
  
  <subtitle>知识不能碎片化，要结构化</subtitle>
  <link href="/wiki/atom.xml" rel="self"/>
  
  <link href="https://kbservice.github.io/wiki/"/>
  <updated>2020-01-10T05:08:41.991Z</updated>
  <id>https://kbservice.github.io/wiki/</id>
  
  <author>
    <name>zthxxx</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git 명령어</title>
    <link href="https://kbservice.github.io/wiki/Git/Git%20%EB%AA%85%EB%A0%B9%EC%96%B4/"/>
    <id>https://kbservice.github.io/wiki/Git/Git%20%EB%AA%85%EB%A0%B9%EC%96%B4/</id>
    <published>2017-10-24T13:28:59.000Z</published>
    <updated>2020-01-10T05:08:41.991Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git-명령어"><a href="#Git-명령어" class="headerlink" title="Git 명령어"></a>Git 명령어</h1><h2 id="git-config-설정"><a href="#git-config-설정" class="headerlink" title="git config : 설정"></a>git config : 설정</h2><h3 id="파일-기록-대상"><a href="#파일-기록-대상" class="headerlink" title="파일 기록 대상"></a>파일 기록 대상</h3><p>실제 아래 파일에 기록이 되며, 적용 시 <code>system</code> -&gt; <code>global</code> -&gt; <code>local</code> 식으로 덮어쓰면서 적용됨. </p><ul><li><code>--local</code> 설정 : <code>.git/config</code> 파일에 저장 - <strong>기본값</strong></li><li><code>--global</code> 설정 : <code>~/.gitconfig</code> 파일에 저장</li><li><code>--system</code> 설정 : <code>/etc/gitconfig</code> 파일에 저장</li><li><code>--file &lt;파일명&gt;</code>, <code>-f &lt;파일명&gt;</code> : 특정 <code>&lt;파일명&gt;</code>에 설정값 저장</li></ul><h3 id="명령어"><a href="#명령어" class="headerlink" title="명령어"></a>명령어</h3><ul><li><code>--list</code>, <code>-l</code> : 설정값 출력</li><li><code>--add &lt;키&gt; &lt;값&gt;</code> : <code>&lt;키&gt;</code>에 <code>&lt;값&gt;</code> 추가. <code>--add</code>는 생략 가능`</li><li><code>--unset &lt;키&gt;</code> : <code>&lt;키&gt;</code>에 대한 속성 제거</li></ul><h3 id="주요-lt-키-gt"><a href="#주요-lt-키-gt" class="headerlink" title="주요 &lt;키&gt;"></a>주요 <code>&lt;키&gt;</code></h3><ul><li><code>user.name</code> : 사용자명</li><li><code>user.email</code> : 사용자 이메일</li></ul><h2 id="git-status-상태확인"><a href="#git-status-상태확인" class="headerlink" title="git status : 상태확인"></a>git status : 상태확인</h2><ul><li>git 현재 상태 확인하기</li></ul><h2 id="git-add-tracked-gt-staging-area"><a href="#git-add-tracked-gt-staging-area" class="headerlink" title="git add : tracked -&gt; staging area"></a>git add : tracked -&gt; staging area</h2><ul><li><code>.</code></li><li><code>*</code></li></ul><h2 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h2><ul><li><code>-m &lt;메시지&gt;</code> : 커밋 메시지</li><li><code>-a</code> : <code>git add</code> 와 동일, tracked -&gt; staging area로 올리기</li></ul><h2 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h2><ul><li><code>--verbose</code>, <code>-v</code> : 설정 확인</li><li><code>add &lt;name&gt; &lt;url&gt;</code> 원격 저장소 추가</li><li><code>rename &lt;old&gt; &lt;new&gt;</code> : 원격 저장소 변경</li><li><code>remove &lt;name&gt;</code> : 원격 저장소 삭제</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Git-명령어&quot;&gt;&lt;a href=&quot;#Git-명령어&quot; class=&quot;headerlink&quot; title=&quot;Git 명령어&quot;&gt;&lt;/a&gt;Git 명령어&lt;/h1&gt;&lt;h2 id=&quot;git-config-설정&quot;&gt;&lt;a href=&quot;#git-config-설정&quot; class
      
    
    </summary>
    
    
      <category term="Git" scheme="https://kbservice.github.io/wiki/categories/Git/"/>
    
    
      <category term="CSS" scheme="https://kbservice.github.io/wiki/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Kafka 명령어</title>
    <link href="https://kbservice.github.io/wiki/Kafka/kafka%20cli%20%EB%AA%85%EB%A0%B9%EC%96%B4/"/>
    <id>https://kbservice.github.io/wiki/Kafka/kafka%20cli%20%EB%AA%85%EB%A0%B9%EC%96%B4/</id>
    <published>2017-10-24T13:28:59.000Z</published>
    <updated>2020-01-10T05:09:12.336Z</updated>
    
    <content type="html"><![CDATA[<h1 id="kafka-cli-명령어"><a href="#kafka-cli-명령어" class="headerlink" title="kafka cli 명령어"></a>kafka cli 명령어</h1><h2 id="서버"><a href="#서버" class="headerlink" title="서버"></a>서버</h2><ul><li><p>시작</p><ul><li><p>zookeeper -&gt; kafka 순으로 작동</p></li><li><p><code>-d</code> 옵션은 daemon으로 생성 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bin&#x2F;zookeeper-server-start.sh config&#x2F;zookeeper.properties</span><br><span class="line">bin&#x2F;kafka-server-start.sh config&#x2F;server.properties</span><br></pre></td></tr></table></figure></li></ul></li><li><p>종료 </p><ul><li><p>kafka -&gt; zookeeper 순으로 종료</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bin&#x2F;kafka-server-stop.sh config&#x2F;server.properties</span><br><span class="line">bin&#x2F;zookeeper-server-stop.sh config&#x2F;zookeeper.properties</span><br></pre></td></tr></table></figure></li></ul></li><li><p>서버 로그 체크</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail &#x2F;usr&#x2F;local&#x2F;bin&#x2F;kafka&#x2F;logs&#x2F;server.log</span><br></pre></td></tr></table></figure></li></ul><h2 id="토픽"><a href="#토픽" class="headerlink" title="토픽"></a>토픽</h2><p>참고 서버를 <code>--bootstrap-server svr:9092</code>로 지정할 수도 있고, <code>--zookeeper zkp:2181</code>로 지정할 수도 있음</p><ul><li><p>토픽 리스트</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin&#x2F;kafka-topics.sh --zookeeper zk1:2181 --list</span><br></pre></td></tr></table></figure></li><li><p>토픽 생성</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bin&#x2F;kafka-topics.sh --zookeeper zk1:2181 --create \</span><br><span class="line">  --replication-factor 1 \</span><br><span class="line">  --partitions 1 \</span><br><span class="line">  --topic topic1</span><br></pre></td></tr></table></figure></li><li><p>토픽 삭제</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bin&#x2F;kafka-topics.sh --zookeeper localhost:2181 --delete \</span><br><span class="line">  --topic topic1</span><br></pre></td></tr></table></figure></li></ul><h2 id="컨슈머그룹"><a href="#컨슈머그룹" class="headerlink" title="컨슈머그룹"></a>컨슈머그룹</h2><ul><li><p>컨슈머그룹 체크</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bin&#x2F;kafka-consumer-groups.sh --bootstrap-server localhost:9092 \</span><br><span class="line">--list</span><br></pre></td></tr></table></figure></li><li><p>컨슈머 옵셋 체크</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bin&#x2F;kafka-consumer-groups.sh --bootstrap-server localhost:9092 \</span><br><span class="line">--group sr --describe</span><br></pre></td></tr></table></figure></li><li><p>컨슈머그룹 삭제</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin&#x2F;kafka-consumer-groups.sh --zookeeper localhost:2181 --delete --group &lt;group_name&gt;</span><br></pre></td></tr></table></figure></li><li><p>토픽 리더 체크</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin&#x2F;kafka-topics.sh --zookeeper localhost:2181 --topic my_topic --describe</span><br></pre></td></tr></table></figure></li></ul><h2 id="컨슈머"><a href="#컨슈머" class="headerlink" title="컨슈머"></a>컨슈머</h2><ul><li><p>특정 토픽의 값 (처음부터) 조회</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bin&#x2F;kafka-console-consumer.sh --bootstrap-server localhost:9092 \</span><br><span class="line">  --from-beginning \</span><br><span class="line">  --topic topic1</span><br></pre></td></tr></table></figure></li><li><p>특정 </p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bin&#x2F;kafka-console-consumer.sh --bootstrap-server localhost:9092 \</span><br><span class="line">  --from-beginning \</span><br><span class="line">  --partition 1 \</span><br><span class="line">  --topic numtest</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;kafka-cli-명령어&quot;&gt;&lt;a href=&quot;#kafka-cli-명령어&quot; class=&quot;headerlink&quot; title=&quot;kafka cli 명령어&quot;&gt;&lt;/a&gt;kafka cli 명령어&lt;/h1&gt;&lt;h2 id=&quot;서버&quot;&gt;&lt;a href=&quot;#서버&quot; cla
      
    
    </summary>
    
    
      <category term="Kafka" scheme="https://kbservice.github.io/wiki/categories/Kafka/"/>
    
    
      <category term="Kafka" scheme="https://kbservice.github.io/wiki/tags/Kafka/"/>
    
  </entry>
  
  <entry>
    <title>Python Environment 설정</title>
    <link href="https://kbservice.github.io/wiki/Python/Python%20Environment/"/>
    <id>https://kbservice.github.io/wiki/Python/Python%20Environment/</id>
    <published>2017-10-24T13:28:59.000Z</published>
    <updated>2020-01-10T05:09:38.010Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python-Environment-설정"><a href="#Python-Environment-설정" class="headerlink" title="Python Environment 설정"></a>Python Environment 설정</h1><h2 id="아나콘다의-conda-env-이용하여-환경-생성-조회-삭제"><a href="#아나콘다의-conda-env-이용하여-환경-생성-조회-삭제" class="headerlink" title="아나콘다의 conda-env 이용하여 환경 생성/조회/삭제"></a>아나콘다의 <code>conda-env</code> 이용하여 환경 생성/조회/삭제</h2><ul><li><p><code>-h</code>,<code>--help</code> : 사용법</p></li><li><p><code>list</code> : 목록보기</p></li><li><p><code>create</code> : 생성하기</p></li><li><p><code>remove</code> : 삭제하기</p></li><li><p><code>update</code> : 수정하기</p></li><li><p><code>export</code> : 내보내기</p></li></ul><h3 id="conda-env-create-환경-생성하기"><a href="#conda-env-create-환경-생성하기" class="headerlink" title="conda-env create 환경 생성하기"></a><code>conda-env create</code> 환경 생성하기</h3><ul><li><code>-n</code> or <code>--name</code> &lt;환경이름&gt; : &lt;환경이름&gt;으로 생성</li><li><code>-f</code> or <code>--file</code> &lt;환경파일&gt; : export된 &lt;환경파일&gt;로 생성. 기본값은 <code>environment.yml</code></li><li><code>-q</code> or <code>--quite</code> : 조용히</li><li><code>--force</code> : 기존 것 지우고 강제로</li></ul><p><code>&lt;환경이름&gt;</code>으로, python버전은 3.6으로 생성</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda-env create -n 환경이름 python=3.6</span><br></pre></td></tr></table></figure><h3 id="conda-create-환경-생성하기"><a href="#conda-create-환경-생성하기" class="headerlink" title="conda create 환경 생성하기"></a><code>conda create</code> 환경 생성하기</h3><p><code>conda env create</code>또는 <code>conda-env create</code>와 다르게 <code>conda create</code>로도 생성할 수 있음<br>기존 명령어에 추가적으로 설정할 수 있는 옵션이 많음</p><ul><li><code>--copy</code> : 패키지를 소프트링크나 하드링크가 아닌 실제 복사(copy)를 해서 생성함</li><li><code>--clone</code> &lt;환경이름&gt; : &lt;환경이름&gt;을 복제한 환경을 생성함</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda create --<span class="built_in">clone</span> 기존환경 -n 신규환경</span><br></pre></td></tr></table></figure><h3 id="conda-env-list-환경-조회하기"><a href="#conda-env-list-환경-조회하기" class="headerlink" title="conda-env list 환경 조회하기"></a><code>conda-env list</code> 환경 조회하기</h3><p>조회하기</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ conda-env list</span><br><span class="line"><span class="comment"># conda environments:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">base                  *  /Users/we/anaconda</span><br><span class="line">gcal_env                 /Users/we/anaconda/envs/gcal_env</span><br><span class="line">ifiw                     /Users/we/anaconda/envs/ifiw</span><br><span class="line">py27                     /Users/we/anaconda/envs/py27</span><br></pre></td></tr></table></figure><h3 id="conda-env-remove-환경-삭제하기"><a href="#conda-env-remove-환경-삭제하기" class="headerlink" title="conda-env remove 환경 삭제하기"></a><code>conda-env remove</code> 환경 삭제하기</h3><ul><li><code>-n</code> or <code>--name</code> &lt;환경이름&gt; : &lt;환경이름&gt; 삭제하기</li><li><code>-q</code> or <code>--quite</code> : 조용히</li><li><code>-y</code> or <code>--yes</code> : 예예</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ conda-env remove -n ifiw</span><br><span class="line"></span><br><span class="line">Remove all packages <span class="keyword">in</span> environment /Users/we/anaconda/envs/ifiw:</span><br><span class="line"></span><br><span class="line">Proceed ([y]/n)? y</span><br></pre></td></tr></table></figure><h2 id="환경-activate-deactivate"><a href="#환경-activate-deactivate" class="headerlink" title="환경 activate/deactivate"></a>환경 activate/deactivate</h2><p><code>activate</code>와 <code>deactivate</code>는 모두 Conda의 쉘로 존재한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">which</span> activate deactivate</span><br><span class="line">/Users/we/anaconda/bin/activate</span><br><span class="line">/Users/we/anaconda/bin/deactivate</span><br></pre></td></tr></table></figure><h3 id="activate"><a href="#activate" class="headerlink" title="activate"></a>activate</h3><ul><li>Windows에선 <code>activate</code>로 수행</li><li>Mac이나 Linux에선 <code>source activate</code>로 수행</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">which</span> python</span><br><span class="line">/Users/we/anaconda/bin/python</span><br><span class="line"><span class="comment"># Python은 OS 위치에 있는 Python 참조</span></span><br><span class="line"></span><br><span class="line">$ activate gcal_env</span><br><span class="line">Error: activate must be sourced. Run <span class="string">'source activate envname'</span></span><br><span class="line">instead of <span class="string">'activate envname'</span>.</span><br><span class="line"><span class="comment"># source activate envname 형식으로 사용하라고...</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">source</span> activate gcal_env</span><br><span class="line"></span><br><span class="line">(gcal_env) $ <span class="built_in">which</span> python</span><br><span class="line">/Users/we/anaconda/envs/gcal_env/bin/python</span><br><span class="line"><span class="comment"># Python은 env의 Python을 참조</span></span><br></pre></td></tr></table></figure><p><code>conda activate 환경이름</code> 역시 가능하다</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ conda activate gcal_env_clone</span><br><span class="line">(gcal_env_clone) $</span><br></pre></td></tr></table></figure><h3 id="deactivate"><a href="#deactivate" class="headerlink" title="deactivate"></a>deactivate</h3><p>마찬가지임</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(gcal_env) $ <span class="built_in">source</span> deactivate</span><br><span class="line"></span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>또는</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(gcal_env) $ conda deactivate</span><br><span class="line"></span><br><span class="line">$</span><br></pre></td></tr></table></figure><h2 id="기타-버전-옵션"><a href="#기타-버전-옵션" class="headerlink" title="(기타) 버전 옵션"></a>(기타) 버전 옵션</h2><ul><li>Fuzzy : <code>numpy=1.11</code> 1.11.0, 1.11.1, 1.11.2, 1.11.18 etc.</li><li>Exact : <code>numpy==1.11</code> 1.11.0</li><li>Greater than or equal to : <code>&quot;numpy&gt;=1.11&quot;</code> 1.11.0 or higher</li><li>OR : <code>&quot;numpy=1.11.1|1.11.3&quot;</code> 1.11.1, 1.11.3</li><li>AND : <code>&quot;numpy&gt;=1.8,&lt;2&quot;</code> 1.8, 1.9, not 2.0</li></ul><p>NOTE: Quotation marks must be used when your specification contains a space or any of these characters: &gt; &lt; | *</p><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><ul><li><a href="https://docs.conda.io/projects/conda/en/4.6.0/_downloads/52a95608c49671267e40c689e0bc00ca/conda-cheatsheet.pdf" rel="external nofollow noopener noreferrer" target="_blank">CONDA CHEAT SHEET</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Python-Environment-설정&quot;&gt;&lt;a href=&quot;#Python-Environment-설정&quot; class=&quot;headerlink&quot; title=&quot;Python Environment 설정&quot;&gt;&lt;/a&gt;Python Environment 설정&lt;/
      
    
    </summary>
    
    
      <category term="Python" scheme="https://kbservice.github.io/wiki/categories/Python/"/>
    
    
      <category term="프로그래밍" scheme="https://kbservice.github.io/wiki/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/"/>
    
  </entry>
  
  <entry>
    <title>MySQL - TABLE 관련</title>
    <link href="https://kbservice.github.io/wiki/DBMS/MySQL/MySQL%20-%20TABLE%20%EA%B4%80%EB%A0%A8/"/>
    <id>https://kbservice.github.io/wiki/DBMS/MySQL/MySQL%20-%20TABLE%20%EA%B4%80%EB%A0%A8/</id>
    <published>2017-10-24T13:28:59.000Z</published>
    <updated>2020-01-10T05:13:53.612Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL-TABLE-관련"><a href="#MySQL-TABLE-관련" class="headerlink" title="MySQL - TABLE 관련"></a>MySQL - TABLE 관련</h1><ul><li>MySQL 테이블 생성 관련 자주 쓰는 옵션</li><li>원 링크는 이곳<a href="https://dev.mysql.com/doc/refman/8.0/en/create-table.html" rel="external nofollow noopener noreferrer" target="_blank">^1</a>을 참조</li></ul><h2 id="MySQL-CREATE-TABLE"><a href="#MySQL-CREATE-TABLE" class="headerlink" title="MySQL - CREATE TABLE"></a>MySQL - CREATE TABLE</h2><h3 id="CREATE-정의"><a href="#CREATE-정의" class="headerlink" title="CREATE 정의"></a>CREATE 정의</h3><ul><li>테이블 생성 옵션<ul><li><code>IF NOT EXISTS</code> 키워드로 에러 방지 가능</li></ul></li></ul><ul><li><p>인덱스 생성</p><ul><li><p><code>index</code>키워드나 <code>key</code>키워드를 이용하면 됨</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tbl_name</span><br><span class="line">(</span><br><span class="line">    col1 <span class="built_in">varchar</span>(<span class="number">10</span>)</span><br><span class="line">    ,<span class="keyword">INDEX</span> (col1, col2, ...)</span><br><span class="line">    ,<span class="keyword">KEY</span> (col1, col2, ...)</span><br><span class="line">    ,<span class="keyword">INDEX</span> 인덱스명 (col1, col2, ...)</span><br><span class="line">    ,<span class="keyword">KEY</span> 인덱스명 (col1, col2, ...)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>PK 생성</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tbl_name</span><br><span class="line">(</span><br><span class="line">    col1 <span class="built_in">varchar</span>(<span class="number">10</span>)</span><br><span class="line">    ,PRIMARY <span class="keyword">KEY</span> (col1, col2, ...)</span><br><span class="line">    ,<span class="keyword">CONSTRAINT</span> PRIMARY <span class="keyword">KEY</span> (col1, col2, ...)</span><br><span class="line">    ,<span class="keyword">CONSTRAINT</span> PK명 PRIMARY <span class="keyword">KEY</span> (col1, col2, ...)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>Unique 인덱스 생성</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tbl_name</span><br><span class="line">(</span><br><span class="line">    col1 <span class="built_in">varchar</span>(<span class="number">10</span>)</span><br><span class="line">    ,<span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> (col1, col2, ...)</span><br><span class="line">    ,<span class="keyword">CONSTRAINT</span> <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> (col1, col2, ...)</span><br><span class="line">    ,<span class="keyword">CONSTRAINT</span> PK명 <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> (col1, col2, ...)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul><h3 id="컬럼"><a href="#컬럼" class="headerlink" title="컬럼"></a>컬럼</h3><ul><li>컬럼</li></ul><pre><code>create_definition:    col_name column_definition  | {INDEX|KEY} [index_name] [index_type] (key_part,...)      [index_option] ...  | {FULLTEXT|SPATIAL} [INDEX|KEY] [index_name] (key_part,...)      [index_option] ...  | [CONSTRAINT [symbol]] PRIMARY KEY      [index_type] (key_part,...)      [index_option] ...  | [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY]      [index_name] [index_type] (key_part,...)      [index_option] ...  | [CONSTRAINT [symbol]] FOREIGN KEY      [index_name] (col_name,...)      reference_definition  | check_constraint_definitioncolumn_definition:    data_type [NOT NULL | NULL] [DEFAULT {literal | (expr)} ]      [AUTO_INCREMENT] [UNIQUE [KEY]] [[PRIMARY] KEY]      [COMMENT &apos;string&apos;]      [COLLATE collation_name]      [COLUMN_FORMAT {FIXED|DYNAMIC|DEFAULT}]      [STORAGE {DISK|MEMORY}]      [reference_definition]      [check_constraint_definition]  | data_type      [COLLATE collation_name]      [GENERATED ALWAYS] AS (expr)      [VIRTUAL | STORED] [NOT NULL | NULL]      [UNIQUE [KEY]] [[PRIMARY] KEY]      [COMMENT &apos;string&apos;]      [reference_definition]      [check_constraint_definition]</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;MySQL-TABLE-관련&quot;&gt;&lt;a href=&quot;#MySQL-TABLE-관련&quot; class=&quot;headerlink&quot; title=&quot;MySQL - TABLE 관련&quot;&gt;&lt;/a&gt;MySQL - TABLE 관련&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;MySQL 테이블 생성
      
    
    </summary>
    
    
      <category term="DBMS" scheme="https://kbservice.github.io/wiki/categories/DBMS/"/>
    
      <category term="MySQL" scheme="https://kbservice.github.io/wiki/categories/DBMS/MySQL/"/>
    
    
      <category term="CSS" scheme="https://kbservice.github.io/wiki/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>MySQL - ROWNUM, ROW_NUMBER()</title>
    <link href="https://kbservice.github.io/wiki/DBMS/MySQL/MySQL%20-%20ROWNUM,%20ROW_NUMBER()/"/>
    <id>https://kbservice.github.io/wiki/DBMS/MySQL/MySQL%20-%20ROWNUM,%20ROW_NUMBER()/</id>
    <published>2017-10-24T13:28:59.000Z</published>
    <updated>2020-01-10T05:13:10.524Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL-ROWNUM-ROW-NUMBER"><a href="#MySQL-ROWNUM-ROW-NUMBER" class="headerlink" title="MySQL - ROWNUM, ROW_NUMBER()"></a>MySQL - ROWNUM, ROW_NUMBER()</h1><ul><li>MySQL 5.7 이전 버전은 Window함수를 사용할 수 없음. 따라서 오라클에서 쓰는 ROWNUM 내부컬럼이나 ROW_NUMBER()과 같은 분석함수를 사용할 수 없음. (MySQL 8 이후 버전에선 Window함수가 사용이 가능)</li><li>관련하여 대안workaround가 있는데, 스택오버플로우<a href="https://stackoverflow.com/questions/1895110/row-number-in-mysql#answer-1895127" rel="external nofollow noopener noreferrer" target="_blank">^1</a>를 참조하면 됨</li></ul><h3 id="변수와-함께-놀기"><a href="#변수와-함께-놀기" class="headerlink" title="변수와 함께 놀기"></a>변수와 함께 놀기</h3><p>Oracle DBMS에 익숙해있으면 <code>ROWNUM</code>이라는 PSEUDO 컬럼에 익숙할것이다. <code>SELECT</code>로 row를 패치할 때 마다 번호를 붙이는 기능으로, 다양하게 활용이 되는데, MySQL에는 그런 컬럼이 없다.</p><p>MySQL의 경우 workaround로 다른 방안을 쓰는데, <code>@변수명</code>과 같은 변수를 사용하고, <strong>이를 이용해 프로그래밍을 하는 것이다.</strong></p><p>이 방법을 적용하기 위해선 <del>불행히도</del> <strong>쿼리가 수행되는 순서도 어느정도는 알아야 한다.</strong> </p><ul><li><p>변수는 <code>SET</code> 구문에서 <code>=</code> 부호를 통해 할당될 수 있다. </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> @i = <span class="number">1</span>;  <span class="comment">-- 변수 할당</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> @i;  <span class="comment">-- 조회</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>@i</th></tr></thead><tbody><tr><td>1</td></tr></tbody></table></li></ul><ul><li><p><code>SELECT</code>등에서도 바로 셋업이 가능하다. 이때는 <code>:=</code> 연산자를 통해 변수에 값을 할당할 수 있다. MySQL 8.0 매뉴얼<a href="https://dev.mysql.com/doc/refman/8.0/en/user-variables.html" rel="external nofollow noopener noreferrer" target="_blank">^2</a>을 보면 <code>:=</code>를 통해 할당을 추천하며, <code>SET</code>의 경우 하위버전 호환성을 위해 남겨지게 된다고 한다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> @j := <span class="number">1</span> <span class="keyword">as</span> j;</span><br></pre></td></tr></table></figure><table><thead><tr><th>j</th></tr></thead><tbody><tr><td>1</td></tr></tbody></table></li><li><p>한가지 다른 방법이 또 있다. <code>SELECT</code> 이후에 <code>INTO</code>를 쓰면 됨</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>, <span class="number">2</span> </span><br><span class="line">  <span class="keyword">into</span> @i, @j</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> @i, @j;</span><br></pre></td></tr></table></figure><table><thead><tr><th>@i</th><th>@j</th></tr></thead><tbody><tr><td>1</td><td>2</td></tr></tbody></table></li><li><p>다만 <code>SELECT ~ INTO</code>는 여러 행을 입력할 경우 에러가 발생한다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a, b</span><br><span class="line">  <span class="keyword">into</span> @i, @j</span><br><span class="line">  <span class="keyword">from</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">as</span> a, <span class="number">2</span> <span class="keyword">as</span> b</span><br><span class="line">        <span class="keyword">union</span> <span class="keyword">all</span> </span><br><span class="line">        <span class="keyword">select</span> <span class="number">3</span>, <span class="number">4</span> </span><br><span class="line">    ) x</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"><span class="comment">--&gt; SQL Error [1172] [42000]: Result consisted of more than one row</span></span><br></pre></td></tr></table></figure></li><li><p>프로그래밍 요소도 있다. 위에서 수행한 <code>@j</code>에 <code>1</code>만큼을 추가하려면 다음과 같이 하면 된다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> @j := @j + <span class="number">1</span> <span class="keyword">as</span> j;</span><br></pre></td></tr></table></figure><table><thead><tr><th>j</th></tr></thead><tbody><tr><td>2</td></tr></tbody></table></li><li><p>자, 이제 다음의 쿼리를 보면 <code>SELECT</code> 에선 뒷쪽 컬럼으로 갈 수록 나중에 수행됨을 알 수 있다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> @k = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> @k := @k + <span class="number">1</span></span><br><span class="line">      ,@k := @k + <span class="number">1</span></span><br><span class="line">      ,@k := @k + <span class="number">1</span>;</span><br></pre></td></tr></table></figure><table><thead><tr><th>k1</th><th>k2</th><th>k3</th></tr></thead><tbody><tr><td>1</td><td>2</td><td>3</td></tr></tbody></table></li><li><p>다음 쿼리를 보면 <code>FROM</code>은 <code>SELECT</code>보다 먼저 수행됨을 알 수 있다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> @k = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> @k := @k + <span class="number">1</span> <span class="keyword">as</span> k1</span><br><span class="line">      ,@k := @k + <span class="number">1</span> <span class="keyword">as</span> k2</span><br><span class="line">      ,@k := @k + <span class="number">1</span> <span class="keyword">as</span> k3</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> @k := <span class="number">5</span>) x;</span><br></pre></td></tr></table></figure></li><li><p>다음 쿼리를 통해서는 <code>FROM</code>절에서 역시 뒷쪽 테이블이 나중에 수행됨을 예상할 수 있다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> @k = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> @k</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> @k := <span class="number">1</span>) x</span><br><span class="line">    ,(<span class="keyword">select</span> @k := <span class="number">2</span>) y</span><br><span class="line">    ,(<span class="keyword">select</span> @k := <span class="number">3</span>) z</span><br><span class="line">;</span><br></pre></td></tr></table></figure><table><thead><tr><th>@k</th></tr></thead><tbody><tr><td>3</td></tr></tbody></table></li><li><p><code>CASE</code>문도 테스트해 볼 수 있다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> @k := @k + <span class="number">1</span></span><br><span class="line">            <span class="keyword">when</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> @k := @k + <span class="number">1</span></span><br><span class="line">       <span class="keyword">end</span> <span class="keyword">as</span> a</span><br><span class="line">      ,@k</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> @k := <span class="number">0</span>) x</span><br><span class="line">;</span><br></pre></td></tr></table></figure><table><thead><tr><th>a</th><th>@k</th></tr></thead><tbody><tr><td>1</td><td>1</td></tr></tbody></table></li><li><p><code>CASE</code>문에서 조건에 맞지 않는 부분은 수행이 되지 않는다는 것.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> @k := @k + <span class="number">1</span></span><br><span class="line">            <span class="keyword">when</span> <span class="number">1</span>=<span class="number">2</span> <span class="keyword">then</span> @k := @k + <span class="number">1</span></span><br><span class="line">       <span class="keyword">end</span> <span class="keyword">as</span> a</span><br><span class="line">      ,@k</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> @k := <span class="number">0</span>) x</span><br><span class="line">;</span><br></pre></td></tr></table></figure><table><thead><tr><th>a</th><th>@k</th></tr></thead><tbody><tr><td>1</td><td>1</td></tr></tbody></table></li><li><p>MySQL에서 <code>0</code>이 아닌 숫자는 <code>True</code>에 해당하기 때문에 다음 <code>CASE</code>문에서는 <code>B</code>부분만 수행이 된다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">not</span>(@k := @k + <span class="number">1</span>) <span class="keyword">then</span> <span class="string">'A'</span></span><br><span class="line">            <span class="keyword">when</span> (@k := @k + <span class="number">1</span>) <span class="keyword">then</span> <span class="string">'B'</span></span><br><span class="line">            <span class="keyword">when</span> <span class="keyword">not</span>(@k := @k + <span class="number">1</span>) <span class="keyword">then</span> <span class="string">'C'</span></span><br><span class="line">            <span class="keyword">else</span> <span class="string">'D'</span></span><br><span class="line">       <span class="keyword">end</span> <span class="keyword">as</span> a</span><br><span class="line">       ,@k</span><br><span class="line">  <span class="keyword">from</span> (<span class="keyword">select</span> @k := <span class="number">0</span>) x</span><br><span class="line">;</span><br></pre></td></tr></table></figure><table><thead><tr><th>a</th><th>@k</th></tr></thead><tbody><tr><td>B</td><td>2</td></tr></tbody></table></li></ul><ul><li><p>아래 쿼리는 어떻게 해석해야 할까?</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> @k = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> @k := @k + <span class="number">1</span> <span class="keyword">as</span> k</span><br><span class="line">  <span class="keyword">from</span> (<span class="keyword">select</span> @k := <span class="number">0</span>) x</span><br><span class="line"> <span class="keyword">where</span> @k := @k + <span class="number">1</span></span><br><span class="line">;</span><br></pre></td></tr></table></figure><table><thead><tr><th>k</th></tr></thead><tbody><tr><td>3</td></tr></tbody></table><ul><li>예상에는 <code>2</code>가 나올 것 같았다. 기본값 <code>0</code>에서 시작해서, <code>WHERE</code>에서 <code>+1</code>, <code>SELECT</code>에서 <code>+1</code> 으로 예상했기 때문이다.</li></ul></li><li><p>다음 예제를 보면 동작을 예상하기 더 쉽다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> @k := @k + <span class="number">1</span> <span class="keyword">as</span> k1</span><br><span class="line">      ,@k := @k + <span class="number">1</span> <span class="keyword">as</span> k2</span><br><span class="line">      ,@k := @k + <span class="number">1</span> <span class="keyword">as</span> k3</span><br><span class="line">  <span class="keyword">from</span> (<span class="keyword">select</span> @k := <span class="number">0</span>) x</span><br><span class="line"> <span class="keyword">where</span> @k := @k + <span class="number">1</span></span><br><span class="line">;</span><br></pre></td></tr></table></figure><table><thead><tr><th>k1</th><th>k2</th><th>k3</th></tr></thead><tbody><tr><td>3</td><td>4</td><td>5</td></tr></tbody></table><ul><li>뭔가 <code>WHERE</code>절에서 2번 카운트 된 것 같다. </li></ul></li></ul><pre><code><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> staff_no</span><br><span class="line">    , m_id</span><br><span class="line">    , @<span class="keyword">rownum</span> := @<span class="keyword">rownum</span> + <span class="number">1</span> <span class="keyword">as</span> <span class="keyword">rank</span></span><br><span class="line"><span class="keyword">from</span> wmp_right.member_staff_mapping</span><br><span class="line">    ,(<span class="keyword">select</span> @<span class="keyword">rownum</span> := <span class="number">0</span>) x</span><br><span class="line"><span class="keyword">where</span> regist_dt &gt;= <span class="keyword">current_date</span> </span><br><span class="line"><span class="keyword">and</span> staff_no = :staff_no </span><br><span class="line">;</span><br></pre></td></tr></table></figure></code></pre><h3 id="ROWNUM"><a href="#ROWNUM" class="headerlink" title="ROWNUM"></a>ROWNUM</h3><h3 id="ROW-NUMBER"><a href="#ROW-NUMBER" class="headerlink" title="ROW_NUMBER()"></a>ROW_NUMBER()</h3><ul><li><p>각 PARTITION별 <code>ROW_NUMBER()</code>등을 하려면 다음과 같이</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> staff_no, m_id</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> staff_no</span><br><span class="line">            ,regist_dt</span><br><span class="line">            ,m_id</span><br><span class="line">            ,<span class="keyword">case</span> <span class="keyword">when</span> @part = staff_no <span class="keyword">then</span> @<span class="keyword">rownum</span> := @<span class="keyword">rownum</span> + <span class="number">1</span> <span class="keyword">else</span> @<span class="keyword">rownum</span> := <span class="number">1</span> <span class="keyword">end</span> <span class="keyword">as</span> rk</span><br><span class="line">            ,@part := staff_no part</span><br><span class="line">        <span class="keyword">from</span> wmp_right.member_staff_mapping a</span><br><span class="line">            ,(<span class="keyword">SELECT</span> @<span class="keyword">rownum</span> := <span class="number">0</span>, @part := <span class="string">''</span>) r</span><br><span class="line">        <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">1</span>, regist_dt <span class="keyword">desc</span></span><br><span class="line">    ) x</span><br><span class="line"><span class="keyword">where</span> rk = <span class="number">1</span>       </span><br><span class="line">;</span><br></pre></td></tr></table></figure></li></ul><h3 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h3><ul><li>[MySQL 8.0 Reference Manual / Language Structure / User-Defined Variables</li></ul><p>9.4 User-Defined Variables](<a href="https://dev.mysql.com/doc/refman/8.0/en/user-variables.html" rel="external nofollow noopener noreferrer" target="_blank">https://dev.mysql.com/doc/refman/8.0/en/user-variables.html</a>)</p><ul><li><a href="https://www.xaprb.com/blog/2006/12/15/advanced-mysql-user-variable-techniques" rel="external nofollow noopener noreferrer" target="_blank">Advanced MySQL User Variable Techniques</a> : User-defined 변수를 무슨 프로그래밍 하듯이 해서 <code>ROW_NUMBER</code>을 구현함</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;MySQL-ROWNUM-ROW-NUMBER&quot;&gt;&lt;a href=&quot;#MySQL-ROWNUM-ROW-NUMBER&quot; class=&quot;headerlink&quot; title=&quot;MySQL - ROWNUM, ROW_NUMBER()&quot;&gt;&lt;/a&gt;MySQL - ROWN
      
    
    </summary>
    
    
      <category term="DBMS" scheme="https://kbservice.github.io/wiki/categories/DBMS/"/>
    
      <category term="Oracle" scheme="https://kbservice.github.io/wiki/categories/DBMS/Oracle/"/>
    
    
      <category term="CSS" scheme="https://kbservice.github.io/wiki/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>MySQL Hints</title>
    <link href="https://kbservice.github.io/wiki/DBMS/MySQL/MySQL%20Hint/"/>
    <id>https://kbservice.github.io/wiki/DBMS/MySQL/MySQL%20Hint/</id>
    <published>2017-10-24T13:28:59.000Z</published>
    <updated>2020-01-10T05:07:42.579Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL-Hints"><a href="#MySQL-Hints" class="headerlink" title="MySQL Hints"></a>MySQL Hints</h1><h2 id="참조링크"><a href="#참조링크" class="headerlink" title="참조링크"></a>참조링크</h2><ul><li><a href="https://dev.mysql.com/doc/refman/8.0/en/controlling-optimizer.html" rel="external nofollow noopener noreferrer" target="_blank">Controlling the Query Optimizer</a></li></ul><h2 id="Optimizer-Hints"><a href="#Optimizer-Hints" class="headerlink" title="Optimizer Hints"></a>Optimizer Hints</h2><ul><li><p>SQL 힌트의 경우 다음과 같이 <code>/*! ... */</code> 로 하는 것이 쿼리도 MySQL Dependent하게 작성하지 않고, 가독성도 살릴 수 있고,… 여튼 권장</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="comment">/*! straight_join */</span> * ...</span><br></pre></td></tr></table></figure></li><li><p><code>STRAIGHT_JOIN</code><br>  테이블을 열거한 순서대로 처리<br>  오라클의 <code>ORDERED</code>와 유사함</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;MySQL-Hints&quot;&gt;&lt;a href=&quot;#MySQL-Hints&quot; class=&quot;headerlink&quot; title=&quot;MySQL Hints&quot;&gt;&lt;/a&gt;MySQL Hints&lt;/h1&gt;&lt;h2 id=&quot;참조링크&quot;&gt;&lt;a href=&quot;#참조링크&quot; class=&quot;
      
    
    </summary>
    
    
      <category term="DBMS" scheme="https://kbservice.github.io/wiki/categories/DBMS/"/>
    
      <category term="MySQL" scheme="https://kbservice.github.io/wiki/categories/DBMS/MySQL/"/>
    
    
      <category term="CSS" scheme="https://kbservice.github.io/wiki/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Vertica - ALTER TABLE</title>
    <link href="https://kbservice.github.io/wiki/DBMS/Vertica/Vertica%20-%20ALTER%20TABLE/"/>
    <id>https://kbservice.github.io/wiki/DBMS/Vertica/Vertica%20-%20ALTER%20TABLE/</id>
    <published>2017-10-24T13:28:59.000Z</published>
    <updated>2020-01-10T05:08:18.138Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vertica-ALTER-TABLE"><a href="#Vertica-ALTER-TABLE" class="headerlink" title="Vertica - ALTER TABLE"></a>Vertica - ALTER TABLE</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> [[database.]schema.]<span class="keyword">table</span> &#123;</span><br><span class="line">    <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> [ <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> ] <span class="keyword">column</span> datatype</span><br><span class="line">        [ <span class="keyword">column</span>‑<span class="keyword">constraint</span> ]</span><br><span class="line">        [ <span class="keyword">ENCODING</span> <span class="keyword">encoding</span>‑<span class="keyword">type</span> ]</span><br><span class="line">        [ PROJECTIONS (projections-<span class="keyword">list</span>) | <span class="keyword">ALL</span> PROJECTIONS ]</span><br><span class="line">    | <span class="keyword">ADD</span> <span class="keyword">table</span>‑<span class="keyword">constraint</span></span><br><span class="line">    | <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> &#123; <span class="keyword">SET</span> | <span class="keyword">DROP</span> &#125; expression</span><br><span class="line">    | <span class="keyword">ALTER</span> <span class="keyword">CONSTRAINT</span> <span class="keyword">constraint</span>‑<span class="keyword">name</span> &#123; ENABLED | DISABLED &#125;</span><br><span class="line">    | <span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> <span class="keyword">constraint</span>‑<span class="keyword">name</span> [ <span class="keyword">CASCADE</span> | RESTRICT ]</span><br><span class="line">    | <span class="keyword">DROP</span> [ <span class="keyword">COLUMN</span> ] [ <span class="keyword">IF</span> <span class="keyword">EXISTS</span> ] <span class="keyword">column</span> [ <span class="keyword">CASCADE</span> | RESTRICT ]</span><br><span class="line">    | <span class="keyword">FORCE</span> <span class="keyword">OUTER</span> <span class="built_in">integer</span></span><br><span class="line">    | &#123; <span class="keyword">INCLUDE</span> | <span class="keyword">EXCLUDE</span> | MATERIALIZE &#125; [ <span class="keyword">SCHEMA</span> ] <span class="keyword">PRIVILEGES</span></span><br><span class="line">    | OWNER <span class="keyword">TO</span> owner </span><br><span class="line">    | <span class="keyword">partition</span>‑clause [ REORGANIZE ]</span><br><span class="line">    | REMOVE PARTITIONING</span><br><span class="line">    | <span class="keyword">RENAME</span> [ <span class="keyword">COLUMN</span> ] <span class="keyword">name</span> <span class="keyword">TO</span> <span class="keyword">new</span>‑<span class="keyword">name</span></span><br><span class="line">    | REORGANIZE</span><br><span class="line">    | <span class="keyword">SET</span> ActivePartitionCount expression</span><br><span class="line">    | <span class="keyword">SET</span> <span class="keyword">SCHEMA</span> <span class="keyword">schema</span></span><br><span class="line">    | <span class="keyword">SET</span> <span class="keyword">STORAGE</span> <span class="keyword">load</span>‑<span class="keyword">option</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="이름변경"><a href="#이름변경" class="headerlink" title="이름변경"></a>이름변경</h2><h3 id="Rename-Table"><a href="#Rename-Table" class="headerlink" title="Rename Table"></a>Rename Table</h3><ul><li><p>하나의 테이블에 대한 rename은 다음과 같이 수행하며, rename 대상이 되는 테이블의 schema명은 작성하지 않음. 만약 테이블의 schema를 변경하기 원한다면 <code>OWNER TO</code>로 schema를 먼저 변경해야 한다.</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> [[database.]schema.]<span class="keyword">table</span>[,…] </span><br><span class="line"><span class="keyword">RENAME</span> <span class="keyword">TO</span> <span class="keyword">new</span>-<span class="keyword">table</span>-<span class="keyword">name</span>[,…]</span><br></pre></td></tr></table></figure><p>  예시</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> S1.T1 <span class="keyword">RENAME</span> <span class="keyword">TO</span> U1;</span><br></pre></td></tr></table></figure><p>  여러 개의 테이블의 이름을 바꿀 수도 있고, 임시 테이블을 이용한 swap도 가능하다. 그리고 아마 하나의 트랜잭션으로 묶여서 수행되는 것으로 알고 있음. (즉, 일부가 안될 경우 전체가 취소 되는 것으로 알고 있음)</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> S1.T1, S1.T2, temps</span><br><span class="line"><span class="keyword">RENAME</span> <span class="keyword">TO</span> temps, T1, T2;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="오너"><a href="#오너" class="headerlink" title="오너"></a>오너</h2><h3 id="Change-Owner"><a href="#Change-Owner" class="headerlink" title="Change Owner"></a>Change Owner</h3><ul><li><p>테이블 소유자(schema)를 변경하려면 다음과 같이 수행</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t1 OWNER <span class="keyword">TO</span> Alice;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="컬럼"><a href="#컬럼" class="headerlink" title="컬럼"></a>컬럼</h2><h3 id="Add-Column"><a href="#Add-Column" class="headerlink" title="Add Column"></a>Add Column</h3><ul><li><p>그냥 하면 됨. 여러 컬럼을 한번에는 안되고, 여러 컬럼일 경우 반복해서 수행.</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> [[database.]schema.]<span class="keyword">table</span> </span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> [ <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> ] <span class="keyword">column</span> datatype</span><br><span class="line">        [ <span class="keyword">column</span>‑<span class="keyword">constraint</span> ]</span><br><span class="line">        [ <span class="keyword">ENCODING</span> <span class="keyword">encoding</span>‑<span class="keyword">type</span> ]</span><br><span class="line">        [ PROJECTIONS (projections-<span class="keyword">list</span>) | <span class="keyword">ALL</span> PROJECTIONS ]</span><br><span class="line">;</span><br></pre></td></tr></table></figure></li></ul><h3 id="Rename-Column"><a href="#Rename-Column" class="headerlink" title="Rename Column"></a>Rename Column</h3><ul><li><p>다음과 같음</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> [schema.]<span class="keyword">table</span>-<span class="keyword">name</span>  </span><br><span class="line"><span class="keyword">RENAME</span> [ <span class="keyword">COLUMN</span> ] <span class="keyword">column</span>-<span class="keyword">name</span> <span class="keyword">TO</span> <span class="keyword">new</span>-<span class="keyword">column</span>-<span class="keyword">name</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="Modify-Column"><a href="#Modify-Column" class="headerlink" title="Modify Column"></a>Modify Column</h3><ul><li><p>주로 데이터 타입이나 제약조건을 변경할 때 사용할 듯</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> exploded_names </span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> time_stamp </span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">DATA</span> <span class="keyword">TYPE</span> TIMESTAMPTZ;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Drop-Column"><a href="#Drop-Column" class="headerlink" title="Drop Column"></a>Drop Column</h2><ul><li><p>그냥 하면 됨;</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> [[database.]schema.]<span class="keyword">table</span></span><br><span class="line"><span class="keyword">DROP</span> [<span class="keyword">COLUMN</span>] [<span class="keyword">IF</span> <span class="keyword">EXISTS</span>] <span class="keyword">column</span> [<span class="keyword">CASCADE</span> | RESTRICT]</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Vertica-ALTER-TABLE&quot;&gt;&lt;a href=&quot;#Vertica-ALTER-TABLE&quot; class=&quot;headerlink&quot; title=&quot;Vertica - ALTER TABLE&quot;&gt;&lt;/a&gt;Vertica - ALTER TABLE&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
      <category term="DBMS" scheme="https://kbservice.github.io/wiki/categories/DBMS/"/>
    
      <category term="Vertica" scheme="https://kbservice.github.io/wiki/categories/DBMS/Vertica/"/>
    
    
      <category term="CSS" scheme="https://kbservice.github.io/wiki/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>CSS 属性声明顺序规范</title>
    <link href="https://kbservice.github.io/wiki/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/CSS/CSS%20%E5%B1%9E%E6%80%A7%E5%A3%B0%E6%98%8E%E9%A1%BA%E5%BA%8F%E8%A7%84%E8%8C%83/"/>
    <id>https://kbservice.github.io/wiki/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/CSS/CSS%20%E5%B1%9E%E6%80%A7%E5%A3%B0%E6%98%8E%E9%A1%BA%E5%BA%8F%E8%A7%84%E8%8C%83/</id>
    <published>2017-10-24T13:28:59.000Z</published>
    <updated>2020-01-10T04:00:08.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS-属性声明顺序规范"><a href="#CSS-属性声明顺序规范" class="headerlink" title="CSS 属性声明顺序规范"></a>CSS 属性声明顺序规范</h1><p>很多 CSS 规范的属性顺序都各不一样，这东西也不像 <a href="https://vuejs.org/v2/style-guide/index.html#Component-instance-options-order-recommended" rel="external nofollow noopener noreferrer" target="_blank">Vue 组件属性顺序</a> 一样有官方规范，这里记录下我目前认为合适的一种顺序。</p><h2 id="属性分类顺序"><a href="#属性分类顺序" class="headerlink" title="属性分类顺序"></a>属性分类顺序</h2><ul><li>显示方法 &amp; 布局</li><li>定位</li><li>盒模型框<ul><li>外边距</li><li>边框</li><li>内边距</li></ul></li><li>尺寸</li><li>文本样式<ul><li>字体</li><li>文本</li><li>文字颜色</li></ul></li><li>背景</li><li>轮廓</li><li>透明度 &amp; 阴影</li><li>动效<ul><li>过渡</li><li>转换变形</li><li>动画</li></ul></li><li>其他<ul><li>伪类 &amp; 伪元素</li><li>引用</li><li>媒体查询</li></ul></li></ul><h2 id="属性顺序列表"><a href="#属性顺序列表" class="headerlink" title="属性顺序列表"></a>属性顺序列表</h2><blockquote><p>源自 AlloyTeam <a href="http://alloyteam.github.io/CodeGuide/#css-declaration-order" rel="external nofollow noopener noreferrer" target="_blank">CSS Code Guide</a></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  [</span><br><span class="line">    <span class="string">"display"</span>,</span><br><span class="line">    <span class="string">"visibility"</span>,</span><br><span class="line">    <span class="string">"float"</span>,</span><br><span class="line">    <span class="string">"clear"</span>,</span><br><span class="line">    <span class="string">"overflow"</span>,</span><br><span class="line">    <span class="string">"overflow-x"</span>,</span><br><span class="line">    <span class="string">"overflow-y"</span>,</span><br><span class="line">    <span class="string">"clip"</span>,</span><br><span class="line">    <span class="string">"zoom"</span></span><br><span class="line">  ],</span><br><span class="line">  [</span><br><span class="line">    <span class="string">"table-layout"</span>,</span><br><span class="line">    <span class="string">"empty-cells"</span>,</span><br><span class="line">    <span class="string">"caption-side"</span>,</span><br><span class="line">    <span class="string">"border-spacing"</span>,</span><br><span class="line">    <span class="string">"border-collapse"</span>,</span><br><span class="line">    <span class="string">"list-style"</span>,</span><br><span class="line">    <span class="string">"list-style-position"</span>,</span><br><span class="line">    <span class="string">"list-style-type"</span>,</span><br><span class="line">    <span class="string">"list-style-image"</span></span><br><span class="line">  ],</span><br><span class="line">  [</span><br><span class="line">    <span class="string">"position"</span>,</span><br><span class="line">    <span class="string">"top"</span>,</span><br><span class="line">    <span class="string">"right"</span>,</span><br><span class="line">    <span class="string">"bottom"</span>,</span><br><span class="line">    <span class="string">"left"</span>,</span><br><span class="line">    <span class="string">"z-index"</span></span><br><span class="line">  ],</span><br><span class="line">  [</span><br><span class="line">    <span class="string">"margin"</span>,</span><br><span class="line">    <span class="string">"margin-top"</span>,</span><br><span class="line">    <span class="string">"margin-right"</span>,</span><br><span class="line">    <span class="string">"margin-bottom"</span>,</span><br><span class="line">    <span class="string">"margin-left"</span>,</span><br><span class="line">    <span class="string">"box-sizing"</span>,</span><br><span class="line">    <span class="string">"border"</span>,</span><br><span class="line">    <span class="string">"border-width"</span>,</span><br><span class="line">    <span class="string">"border-style"</span>,</span><br><span class="line">    <span class="string">"border-color"</span>,</span><br><span class="line">    <span class="string">"border-top"</span>,</span><br><span class="line">    <span class="string">"border-top-width"</span>,</span><br><span class="line">    <span class="string">"border-top-style"</span>,</span><br><span class="line">    <span class="string">"border-top-color"</span>,</span><br><span class="line">    <span class="string">"border-right"</span>,</span><br><span class="line">    <span class="string">"border-right-width"</span>,</span><br><span class="line">    <span class="string">"border-right-style"</span>,</span><br><span class="line">    <span class="string">"border-right-color"</span>,</span><br><span class="line">    <span class="string">"border-bottom"</span>,</span><br><span class="line">    <span class="string">"border-bottom-width"</span>,</span><br><span class="line">    <span class="string">"border-bottom-style"</span>,</span><br><span class="line">    <span class="string">"border-bottom-color"</span>,</span><br><span class="line">    <span class="string">"border-left"</span>,</span><br><span class="line">    <span class="string">"border-left-width"</span>,</span><br><span class="line">    <span class="string">"border-left-style"</span>,</span><br><span class="line">    <span class="string">"border-left-color"</span>,</span><br><span class="line">    <span class="string">"border-radius"</span>,</span><br><span class="line">    <span class="string">"border-top-left-radius"</span>,</span><br><span class="line">    <span class="string">"border-top-right-radius"</span>,</span><br><span class="line">    <span class="string">"border-bottom-right-radius"</span>,</span><br><span class="line">    <span class="string">"border-bottom-left-radius"</span>,</span><br><span class="line">    <span class="string">"border-image"</span>,</span><br><span class="line">    <span class="string">"border-image-source"</span>,</span><br><span class="line">    <span class="string">"border-image-slice"</span>,</span><br><span class="line">    <span class="string">"border-image-width"</span>,</span><br><span class="line">    <span class="string">"border-image-outset"</span>,</span><br><span class="line">    <span class="string">"border-image-repeat"</span>,</span><br><span class="line">    <span class="string">"padding"</span>,</span><br><span class="line">    <span class="string">"padding-top"</span>,</span><br><span class="line">    <span class="string">"padding-right"</span>,</span><br><span class="line">    <span class="string">"padding-bottom"</span>,</span><br><span class="line">    <span class="string">"padding-left"</span>,</span><br><span class="line">    <span class="string">"width"</span>,</span><br><span class="line">    <span class="string">"min-width"</span>,</span><br><span class="line">    <span class="string">"max-width"</span>,</span><br><span class="line">    <span class="string">"height"</span>,</span><br><span class="line">    <span class="string">"min-height"</span>,</span><br><span class="line">    <span class="string">"max-height"</span></span><br><span class="line">  ],</span><br><span class="line">  [</span><br><span class="line">    <span class="string">"font"</span>,</span><br><span class="line">    <span class="string">"font-family"</span>,</span><br><span class="line">    <span class="string">"font-size"</span>,</span><br><span class="line">    <span class="string">"font-weight"</span>,</span><br><span class="line">    <span class="string">"font-style"</span>,</span><br><span class="line">    <span class="string">"font-variant"</span>,</span><br><span class="line">    <span class="string">"font-size-adjust"</span>,</span><br><span class="line">    <span class="string">"font-stretch"</span>,</span><br><span class="line">    <span class="string">"font-effect"</span>,</span><br><span class="line">    <span class="string">"font-emphasize"</span>,</span><br><span class="line">    <span class="string">"font-emphasize-position"</span>,</span><br><span class="line">    <span class="string">"font-emphasize-style"</span>,</span><br><span class="line">    <span class="string">"font-smooth"</span>,</span><br><span class="line">    <span class="string">"line-height"</span>,</span><br><span class="line">    <span class="string">"text-align"</span>,</span><br><span class="line">    <span class="string">"text-align-last"</span>,</span><br><span class="line">    <span class="string">"vertical-align"</span>,</span><br><span class="line">    <span class="string">"white-space"</span>,</span><br><span class="line">    <span class="string">"text-decoration"</span>,</span><br><span class="line">    <span class="string">"text-emphasis"</span>,</span><br><span class="line">    <span class="string">"text-emphasis-color"</span>,</span><br><span class="line">    <span class="string">"text-emphasis-style"</span>,</span><br><span class="line">    <span class="string">"text-emphasis-position"</span>,</span><br><span class="line">    <span class="string">"text-indent"</span>,</span><br><span class="line">    <span class="string">"text-justify"</span>,</span><br><span class="line">    <span class="string">"letter-spacing"</span>,</span><br><span class="line">    <span class="string">"word-spacing"</span>,</span><br><span class="line">    <span class="string">"text-outline"</span>,</span><br><span class="line">    <span class="string">"text-transform"</span>,</span><br><span class="line">    <span class="string">"text-wrap"</span>,</span><br><span class="line">    <span class="string">"text-overflow"</span>,</span><br><span class="line">    <span class="string">"text-overflow-ellipsis"</span>,</span><br><span class="line">    <span class="string">"text-overflow-mode"</span>,</span><br><span class="line">    <span class="string">"word-wrap"</span>,</span><br><span class="line">    <span class="string">"word-break"</span></span><br><span class="line">  ],</span><br><span class="line">  [</span><br><span class="line">    <span class="string">"color"</span>,</span><br><span class="line">    <span class="string">"background"</span>,</span><br><span class="line">    <span class="string">"background-color"</span>,</span><br><span class="line">    <span class="string">"background-image"</span>,</span><br><span class="line">    <span class="string">"background-repeat"</span>,</span><br><span class="line">    <span class="string">"background-attachment"</span>,</span><br><span class="line">    <span class="string">"background-position"</span>,</span><br><span class="line">    <span class="string">"background-position-x"</span>,</span><br><span class="line">    <span class="string">"background-position-y"</span>,</span><br><span class="line">    <span class="string">"background-clip"</span>,</span><br><span class="line">    <span class="string">"background-origin"</span>,</span><br><span class="line">    <span class="string">"background-size"</span></span><br><span class="line">  ],</span><br><span class="line">  [</span><br><span class="line">    <span class="string">"outline"</span>,</span><br><span class="line">    <span class="string">"outline-width"</span>,</span><br><span class="line">    <span class="string">"outline-style"</span>,</span><br><span class="line">    <span class="string">"outline-color"</span>,</span><br><span class="line">    <span class="string">"outline-offset"</span>,</span><br><span class="line">    <span class="string">"opacity"</span>,</span><br><span class="line">    <span class="string">"box-shadow"</span>,</span><br><span class="line">    <span class="string">"text-shadow"</span></span><br><span class="line">  ],</span><br><span class="line">  [</span><br><span class="line">    <span class="string">"transition"</span>,</span><br><span class="line">    <span class="string">"transition-delay"</span>,</span><br><span class="line">    <span class="string">"transition-timing-function"</span>,</span><br><span class="line">    <span class="string">"transition-duration"</span>,</span><br><span class="line">    <span class="string">"transition-property"</span>,</span><br><span class="line">    <span class="string">"transform"</span>,</span><br><span class="line">    <span class="string">"transform-origin"</span>,</span><br><span class="line">    <span class="string">"animation"</span>,</span><br><span class="line">    <span class="string">"animation-name"</span>,</span><br><span class="line">    <span class="string">"animation-duration"</span>,</span><br><span class="line">    <span class="string">"animation-play-state"</span>,</span><br><span class="line">    <span class="string">"animation-timing-function"</span>,</span><br><span class="line">    <span class="string">"animation-delay"</span>,</span><br><span class="line">    <span class="string">"animation-iteration-count"</span>,</span><br><span class="line">    <span class="string">"animation-direction"</span></span><br><span class="line">  ],</span><br><span class="line">  [</span><br><span class="line">    <span class="string">"content"</span>,</span><br><span class="line">    <span class="string">"quotes"</span>,</span><br><span class="line">    <span class="string">"counter-reset"</span>,</span><br><span class="line">    <span class="string">"counter-increment"</span>,</span><br><span class="line">    <span class="string">"resize"</span>,</span><br><span class="line">    <span class="string">"cursor"</span>,</span><br><span class="line">    <span class="string">"user-select"</span>,</span><br><span class="line">    <span class="string">"nav-index"</span>,</span><br><span class="line">    <span class="string">"nav-up"</span>,</span><br><span class="line">    <span class="string">"nav-right"</span>,</span><br><span class="line">    <span class="string">"nav-down"</span>,</span><br><span class="line">    <span class="string">"nav-left"</span>,</span><br><span class="line">    <span class="string">"tab-size"</span>,</span><br><span class="line">    <span class="string">"hyphens"</span>,</span><br><span class="line">    <span class="string">"pointer-events"</span></span><br><span class="line">  ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><blockquote><ul><li><a href="http://codeguide.co/#css-declaration-order" rel="external nofollow noopener noreferrer" target="_blank">Code Guide by @mdo</a></li><li><a href="https://github.com/twitter/recess/blob/master/lib/lint/strict-property-order.js#L36" rel="external nofollow noopener noreferrer" target="_blank">RECESS | property order</a></li><li><a href="http://alloyteam.github.io/CodeGuide/#css-declaration-order" rel="external nofollow noopener noreferrer" target="_blank">Code Guide by @AlloyTeam</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CSS-属性声明顺序规范&quot;&gt;&lt;a href=&quot;#CSS-属性声明顺序规范&quot; class=&quot;headerlink&quot; title=&quot;CSS 属性声明顺序规范&quot;&gt;&lt;/a&gt;CSS 属性声明顺序规范&lt;/h1&gt;&lt;p&gt;很多 CSS 规范的属性顺序都各不一样，这东西也不像 &lt;a 
      
    
    </summary>
    
    
      <category term="程序语言" scheme="https://kbservice.github.io/wiki/categories/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/"/>
    
      <category term="CSS" scheme="https://kbservice.github.io/wiki/categories/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/CSS/"/>
    
    
      <category term="CSS" scheme="https://kbservice.github.io/wiki/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Webpack 中 css import 使用 alias 相对路径</title>
    <link href="https://kbservice.github.io/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/Webpack-%E4%B8%AD-css-import-%E4%BD%BF%E7%94%A8-alias-%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84/"/>
    <id>https://kbservice.github.io/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/Webpack-%E4%B8%AD-css-import-%E4%BD%BF%E7%94%A8-alias-%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84/</id>
    <published>2017-09-20T16:11:38.000Z</published>
    <updated>2020-01-10T04:00:08.454Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>在用 Webpack 处理打包时，可将某一目录配置一个别名，代码中就能使用与别名的相对路径引用资源。</p><p>在 Vue 项目中，我们通常使用 <code>vue-webpack</code> 脚手架生成工程模板，然后配置 <code>@</code> 为项目根目录下放资源和源码的 <code>/src</code> 目录的别名；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...,</span><br><span class="line">resolve: &#123;</span><br><span class="line">  ...,</span><br><span class="line">  alias: &#123;</span><br><span class="line">    <span class="string">'@'</span>: resolve(<span class="string">'src'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们就可以在 js 文件中用形如 <code>import tool from &#39;@/utils/xxx&#39;</code> 的方式引用 <code>/src/utils/xxx.js</code> 文件，并且 Webpack 能正确识别并打包。</p><p>但是在 css 文件，如 less, sass, stylus 中，使用 <code>@import &quot;@/style/theme&quot;</code> 的语法引用相对 <code>@</code> 的目录确会报错，”找不到 ‘@’ 目录”，说明 webpack 没有正确识别资源相对路径。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>原因是 css 文件会被用 <code>css-loader</code> 处理，这里 css <code>@import</code> 后的字符串会被 <code>css-loader</code> 视为绝对路径解析，因为我们并没有添加 <a href="https://github.com/webpack-contrib/css-loader#alias" rel="external nofollow noopener noreferrer" target="_blank"><code>css-loader</code> 的 alias</a>，所以会报找不到 <code>@</code> 目录。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>在 Webpack 中 css import 使用 alias 相对路径的解决办法有两种；</p><p>一是直接为 <code>css-loader</code> 添加 <a href="https://github.com/webpack-contrib/css-loader#alias" rel="external nofollow noopener noreferrer" target="_blank">ailas</a> 的路径，但是在 <code>vue-webpack</code> 给的模板中，单独针对这个插件添加配置就显得麻烦冗余了；</p><p>二是在引用路径的字符串最前面添加上 <code>~</code> 符号，如 <code>@import &quot;~@/style/theme&quot;</code>；Webpack 会将以 <code>~</code> 符号作为前缀的路径视作依赖模块而去解析，这样 <code>@</code> 的 alias 配置就能生效了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>~</code> 视为模块解析是 webpack 做的事，不是 css-loader 做的事。</p><p>各类非 js 直接引用（<code>import</code> <code>require</code>）静态资源，依赖相对路径加载问题，都可以用 <code>~</code> 语法完美解决；</p><p>例如 css module 中： <code>@import &quot;~@/style/theme&quot;</code></p><p>css 属性中： <code>background: url(&quot;~@/assets/xxx.jpg&quot;)</code></p><p>html 标签中： <code>&lt;img src=&quot;~@/assets/xxx.jpg&quot; alt=&quot;alias&quot;&gt;</code></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="https://hq5544.github.io/vue-webpack/static.html#资源路径的处理" rel="external nofollow noopener noreferrer" target="_blank">vue-webpack 资源路径的处理</a></li><li><a href="https://github.com/webpack-contrib/css-loader/issues/49" rel="external nofollow noopener noreferrer" target="_blank">Using url(path) with resolve.alias</a></li><li><a href="https://github.com/webpack-contrib/css-loader#url" rel="external nofollow noopener noreferrer" target="_blank">CSS Loader Usage Url</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;在用 Webpack 处理打包时，可将某一目录配置一个别名，代码中就能使用与别名的相对路径引用资源。&lt;/p&gt;
&lt;p&gt;在 Vue 项目中，我们
      
    
    </summary>
    
    
      <category term="技术开发" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="前端" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="https://kbservice.github.io/wiki/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="webpack" scheme="https://kbservice.github.io/wiki/tags/webpack/"/>
    
      <category term="css-loader" scheme="https://kbservice.github.io/wiki/tags/css-loader/"/>
    
  </entry>
  
  <entry>
    <title>GitHub 团队任务管理流程</title>
    <link href="https://kbservice.github.io/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/GitHub%E5%9B%A2%E9%98%9F%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86%E6%B5%81%E7%A8%8B/"/>
    <id>https://kbservice.github.io/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/GitHub%E5%9B%A2%E9%98%9F%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86%E6%B5%81%E7%A8%8B/</id>
    <published>2017-09-17T11:41:28.000Z</published>
    <updated>2020-01-10T04:00:08.456Z</updated>
    
    <content type="html"><![CDATA[<p><strong>注：本篇是针对团队的任务管理，非开发规范。</strong></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>GitHub 本身是非常推崇和支持团队合作，也有一些帮助项目管理的插件如 <a href="https://www.zenhub.com/" rel="external nofollow noopener noreferrer" target="_blank">ZenHub</a>，但这里我主要记录使用原生 GitHub 功能的团队任务管理模型构想。</p><p>在开始之前，我搜索过大量中文资料，但关于基于 GitHub 的团队管理方面资料很少，尝试英文搜索后，发现我所有的问题都能在官方的 <a href="https://help.github.com/categories/managing-your-work-on-github/" rel="external nofollow noopener noreferrer" target="_blank">GitHub Help</a> 文档中找到答案；</p><p><strong># 再次强调官方文档的重要性 #</strong></p><p>所以本篇也不会讲如何操作 GitHub，更不会讲如何使用 Git。</p><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>实验室内部需要一套规范化的团队管理方案，总体采用用任务驱动制，因此产生了一套</p><p><strong>制定任务 –&gt; 安排任务 –&gt; 分配人员 –&gt; 追踪进度 –&gt; 审核成果 –&gt; 解决任务</strong></p><p>的管理需求。</p><p>细分来说，制定任务包括建立项目，规划项目的几个进行阶段，每个阶段具体有哪些任务，每个任务有哪些要点。</p><p>对整个团队来说，有不同方向的人员分组，制定的各项任务应该安排给适合的分组去完成，并且按照拟定的计划，阶段内的任务应该有时限，有明确的截止期限。</p><p>在分组内部，再通过分解步骤拟定各项任务和要点，分配给相应的成员。</p><p>审核人员根据各项任务完成进度，及时调整，对完成的任务做审核评估，最终标记任务为已解决。</p><h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><p>GitHub 提供的诸多特性都是应对管理模式的，各项概念中，Issues 提出问题与讨论；Milestone 里程碑，用于将 Issues 划分阶段进行追踪管理；Project 规划和管理项目；Organization 组织，下属成员可分为多个 Team，Team 可多层细分，并有不同的权限；对项目开发来说，能建立 Repositories 放置文件代码，人员相互之间形成 collaborator 合作者；以上这些特性完全能胜任我们需求的管理模式。</p><p>对应以上需求，实验室所有人员组成一个 <a href="https://help.github.com/articles/about-organizations/" rel="external nofollow noopener noreferrer" target="_blank">Organization</a>;</p><p>按不同研究方向将 Organization 划分为多个 <a href="https://help.github.com/articles/about-teams/" rel="external nofollow noopener noreferrer" target="_blank">Team</a>，每个 Team 中按照小组关系进一步<a href="https://help.github.com/articles/requesting-to-add-a-child-team/" rel="external nofollow noopener noreferrer" target="_blank">建立二级、三级 Team</a>。</p><p>实验室需要做的项目按照敏捷管理的方式建立 Organization 的 <a href="https://help.github.com/articles/tracking-the-progress-of-your-work-with-project-boards/" rel="external nofollow noopener noreferrer" target="_blank">Project</a>，具体划分的不同模块建立多个 Repositories，Organization 的 Project 能跨不同的 Repositories <a href="https://help.github.com/articles/adding-issues-and-pull-requests-to-a-project-board/" rel="external nofollow noopener noreferrer" target="_blank">管理 Issues</a>。</p><p>Repositories 没有层级，一个 Repository 能被分配给多个 Team 并<a href="https://help.github.com/articles/managing-team-access-to-an-organization-repository/" rel="external nofollow noopener noreferrer" target="_blank">赋予不同的权限</a>，但我们可以将一个 Repository 只分配给一个 Team，这样看作是 Team 拥有自己的 Repository。</p><p>在 Team 的 Repository 中，通过建立 <a href="https://help.github.com/articles/about-milestones/" rel="external nofollow noopener noreferrer" target="_blank">Milestone</a> 来安排任务目标和截止时间，在 Milestone 中<a href="https://help.github.com/articles/associating-milestones-with-issues-and-pull-requests/" rel="external nofollow noopener noreferrer" target="_blank">添加 Issues</a> 用作安排具体的任务，Issue 中能建立 <a href="https://help.github.com/articles/about-task-lists/" rel="external nofollow noopener noreferrer" target="_blank">Task List</a>，用来表示一个任务的完成步骤和要点；每个 Issue 能<a href="https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/" rel="external nofollow noopener noreferrer" target="_blank">指派不同的人员或 Team</a>；Milestone 中会显示所属 <a href="https://help.github.com/articles/viewing-your-milestone-s-progress/" rel="external nofollow noopener noreferrer" target="_blank">Issues 的完成进度</a>，用作任务管理再合适不过了。</p><p>Issues 之间能互相<a href="https://help.github.com/articles/autolinked-references-and-urls/" rel="external nofollow noopener noreferrer" target="_blank">提及(关联)</a>这在相互沟通上很有帮助；整个 Issues 面板功能都可以被<a href="https://help.github.com/articles/disabling-issues/" rel="external nofollow noopener noreferrer" target="_blank">关闭</a>，但我们更常用的是针对一条 Issue 使用 <a href="https://help.github.com/articles/locking-conversations/" rel="external nofollow noopener noreferrer" target="_blank">Locking conversations</a> 功能锁住权限，这样就只有拥有仓库权限的人能在这条 Issue 下评论，通常用于防止 spam，在合作管理中也就防止了不相关的人来捣乱。</p><p>一般来说，如果 Team 需要合作完成一项具体的项目，那么可以建一个管理敏捷开发的 Project；如果只是一般的日常任务需求，那么在任务仓库建立几个 Milestone 就够了。两者核心都是 <a href="https://help.github.com/articles/about-issues/" rel="external nofollow noopener noreferrer" target="_blank">Issues track</a>。</p><p>审核任务包括 <a href="https://help.github.com/articles/about-pull-request-reviews/" rel="external nofollow noopener noreferrer" target="_blank">Code Review</a> 和审核 Issues 完成情况；Code Review 可以在完成一个 Issue 或 完成一项 Milestone 时进行；Issues 进度跟踪需要在日常进行，如果 Issue 是考核任务，那么在超时未 <a href="https://help.github.com/articles/closing-issues-using-keywords/" rel="external nofollow noopener noreferrer" target="_blank">Close</a> 后应认为考核失败。</p><p>解决任务的表现形式就是 Close，Close Issues、Close Milestone、Close Project。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上方案就是目前构想的基于 GitHub 的团队任务管理模型，之所以说构想，是因为这套方案未被实施验证，实际进行中肯定会有各种修改和补充的细节。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="https://help.github.com/" rel="external nofollow noopener noreferrer" target="_blank"><strong>GitHub</strong> Help</a></li><li><a href="https://www.zenhub.com/" rel="external nofollow noopener noreferrer" target="_blank">ZenHub | Agile project management within GitHub</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;注：本篇是针对团队的任务管理，非开发规范。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;GitHub 本身是非常推崇和支持团队合作，也有
      
    
    </summary>
    
    
      <category term="技术开发" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="软件工程" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="Git" scheme="https://kbservice.github.io/wiki/tags/Git/"/>
    
      <category term="GitHub" scheme="https://kbservice.github.io/wiki/tags/GitHub/"/>
    
      <category term="团队协作" scheme="https://kbservice.github.io/wiki/tags/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>Selenium 中使用 Chrome 路径问题</title>
    <link href="https://kbservice.github.io/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/Selenium-%E4%B8%AD%E4%BD%BF%E7%94%A8-Chrome-%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/"/>
    <id>https://kbservice.github.io/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/Selenium-%E4%B8%AD%E4%BD%BF%E7%94%A8-Chrome-%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/</id>
    <published>2017-05-05T16:37:50.000Z</published>
    <updated>2020-01-10T04:00:08.453Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>这个问题的起因是折腾了好久，vue2 官方模板 <code>vue init webpack</code> 初始化后，<code>npm install</code> 完，直接 <code>npm run e2e</code> 都报错。。。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Error retrieving a new session from the selenium server</span><br><span class="line"></span><br><span class="line">Connection refused! Is selenium server started?</span><br></pre></td></tr></table></figure><h2 id="排查"><a href="#排查" class="headerlink" title="排查"></a>排查</h2><p><code>nightwatch.conf.js</code> 中，对服务器和浏览器的地址描述，用的分别是</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server_path: <span class="built_in">require</span>(<span class="string">'selenium-server'</span>).path</span><br><span class="line"><span class="string">'webdriver.chrome.driver'</span>: <span class="built_in">require</span>(<span class="string">'chromedriver'</span>).path</span><br></pre></td></tr></table></figure><p>在 <code>node</code> 中检查地址没问题，包也没问题。</p><p>查找官网资料未果，后在各网友经验中发现两句关键描述：</p><p><strong>在 selenium 中使用 chromedriver 驱动，除了需要下载 chromedriver.exe 然后放置在 chrome 浏览器的安装目录之外，还要将 chrome 安装目录添加到环境变量 path 中。</strong></p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><ol><li>从 <code>node_modules</code> 的 <code>chormedriver</code> 包中复制出 <code>chromedriver.exe</code> 到 Chrome 安装目录下（<code>Google/Chrome/Application/</code>），和 <code>chromed.exe</code> 放在同一目录中。</li><li>将 Chrome 安装目录（<code>Google/Chrome/Application/</code>）添加到环境变量 <code>path</code> 下。</li><li>把 <code>nightwatch.conf.js</code> 中的 <code>webdriver.chrome.driver</code> 对应的路径手动指定到 Chrome 安装目录下的 <code>chromedriver.exe</code>，Win 下记得字符转义。</li></ol><p>此时 <code>npm run e2e</code> 能成功启动 Chrome 并测试。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="http://blog.csdn.net/carsonzhang_/article/details/46318531" rel="external nofollow noopener noreferrer" target="_blank">selenium chromedriver配置</a></li><li><a href="http://www.cnblogs.com/Jeff-cui/p/4940410.html" rel="external nofollow noopener noreferrer" target="_blank">使用webdriver打开本地浏览器</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;这个问题的起因是折腾了好久，vue2 官方模板 &lt;code&gt;vue init webpack&lt;/code&gt; 初始化后，&lt;code&gt;npm i
      
    
    </summary>
    
    
      <category term="技术开发" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="前端" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="https://kbservice.github.io/wiki/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>awk 管道操作小结</title>
    <link href="https://kbservice.github.io/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/Linux/Shell/awk-%E7%AE%A1%E9%81%93%E6%93%8D%E4%BD%9C%E5%B0%8F%E7%BB%93/"/>
    <id>https://kbservice.github.io/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/Linux/Shell/awk-%E7%AE%A1%E9%81%93%E6%93%8D%E4%BD%9C%E5%B0%8F%E7%BB%93/</id>
    <published>2017-04-25T15:04:48.000Z</published>
    <updated>2020-01-10T04:00:08.450Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>大致是希望使用 awk 读取一个文本文件，通过空行把文本分割成多个文本块，依次把每个文本块输入到一个程序，并把结果依次输出到指定文件。</p><p>先看文件结构：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ls</span><br><span class="line">plus.sh  data.txt</span><br></pre></td></tr></table></figure><p>其中， <strong><code>plus.sh</code></strong> 文件内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">IFS=<span class="string">" "</span></span><br><span class="line"><span class="built_in">read</span> a b</span><br><span class="line">((c=a+b)) </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;c&#125;</span></span><br></pre></td></tr></table></figure><p>代码含义是从标准输入读入两个数， <code>a</code> 、<code>b</code>，返回 <code>a+b</code> 的结果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ./plus.sh</span><br><span class="line">2 3    <span class="comment"># &lt;-- its my input</span></span><br><span class="line">5      <span class="comment"># --&gt; its result</span></span><br></pre></td></tr></table></figure><p><strong><code>data.txt</code></strong> 中的数据如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">0 30</span><br><span class="line"></span><br><span class="line">30 40</span><br><span class="line"></span><br><span class="line">40 80</span><br><span class="line"></span><br><span class="line">80 100</span><br></pre></td></tr></table></figure><p>目标是使用 awk 从 <code>data.txt</code> 中读入 4 组数据，分别输入到 <code>plus.sh</code> 中，返回 4 个结果值，并依次输入到 <code>output.txt</code> 中。预期结果 <code>output.txt</code> 如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">30</span><br><span class="line">70</span><br><span class="line">120</span><br><span class="line">180</span><br></pre></td></tr></table></figure><h2 id="经过"><a href="#经过" class="headerlink" title="经过"></a>经过</h2><p>一开始，简单的思路是，awk 使用<strong>空行分割文本文件</strong>，把每组文本块<strong>通过管道输入</strong>到调用的 <code>plus.sh</code> 中，再把每组的结果通过<strong>重定向追加</strong>到 <code>output.txt</code> 文件中。</p><p>根据思路于是写出如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ awk -v RS=<span class="string">""</span> <span class="string">'&#123;print | "./plus.sh &gt;&gt; output.txt"&#125;'</span> data.txt</span><br></pre></td></tr></table></figure><p>然而一看结果，只有第一个分段中求出来的值；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ls</span><br><span class="line">plus.sh  data.txt  output.txt</span><br><span class="line"></span><br><span class="line">$ cat output.txt</span><br><span class="line">30</span><br></pre></td></tr></table></figure><p>经过调试和单独输出，发现分段也没问题，单独 <code>print</code> 也是分段的没问题，于是大概猜测<strong>问题出在重定向上</strong>，除了第一个值以外的其他结果并没有被重定向到文件（此处只是当时猜测，其实不对，请看下文分析）；</p><p>通过查阅 <strong>「awk 使用管道输出到 shell 中」</strong> 的相关资料，找到问题答案：</p><blockquote><p>如果在 awk 程序中打开了管道，必须<strong>先关闭该管道才能打开另一个管道</strong>。也就是说一次只能打开一个管道。</p><p><strong>shell 命令必须被双引号引用起来。</strong></p><p>如果打算<strong>再次</strong>在 awk 程序中使用某个文件或管道进行读写，则可能要先关闭程序，因为其中的管道会保持打开状态直至脚本运行结束。注意，管道一旦被打开，就会保持打开状态直至 awk 退出。</p><p>对于 <code>awk output | shell input</code> 来说，shell 接收 awk 的输出，并进行处理。需要注意的是，<strong>awk 的 output 是先缓存在 pipe 中，等输出完毕后再调用 shell 命令 处理</strong>，shell 命令只处理一次，而且<strong>处理的时机是 「awk程序结束时，或者管道关闭时（需要显式的关闭管道）」</strong></p></blockquote><p>对于刚才的问题，简单的解释就是因为管道缓存，<code>print</code> 的所有输出被堆到一起只传了一次给 <code>plus.sh</code>，而且这一次相当于传了整个文件，但 <code>plus.sh</code> 在读了两个数计算完后就退出了，后面的所有数都没用上，由于 <code>plus.sh</code> 只计算了一次，因此结果也只有一个。（并非上面猜测的结果未被重定向）</p><h2 id="解决尝试"><a href="#解决尝试" class="headerlink" title="解决尝试"></a>解决尝试</h2><p>最初的解决尝试是使用 awk 中的 <code>close</code> 命令关闭文件管道，于是写出如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ awk -v RS=<span class="string">""</span> <span class="string">'&#123;print | "./plus.sh &gt;&gt; output.txt"; close("output.txt")&#125;'</span> data.txt</span><br></pre></td></tr></table></figure><p>结果依然只有一个值。。。</p><p>继续查阅资料才知道，<code>close</code> 关闭时需要输入的是<strong>管道描述符</strong>，而非只是文件名，而管道描述符是包含<strong>对管道调用的整个命令在内的 shell 命令字符串</strong>，也就是说，应该是 <code>close(&quot;./plus.sh &gt;&gt; output.txt&quot;)</code> 。</p><p>再次尝试代码修改如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ awk -v RS=<span class="string">""</span> <span class="string">'&#123;print | "./plus.sh &gt;&gt; output.txt"; close("./plus.sh &gt;&gt; output.txt")&#125;'</span> data.txt</span><br><span class="line"></span><br><span class="line">$ cat output.txt</span><br><span class="line">30</span><br><span class="line">70</span><br><span class="line">120</span><br><span class="line">180</span><br></pre></td></tr></table></figure><p>OK，解决问题，这句代码就是能用的了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总结下刚刚踩的坑，再做些优化；</p><ol><li><p>awk 中先关闭该管道才能打开另一个管道；</p></li><li><p><code>awk output | shell input</code> 时，awk 输出缓存到管道中，只有 awk 程序结束时，或者管道关闭时，才把缓存中的所有输出交由 shell 处理；</p></li><li><p>管道描述符是<strong>调用管道的整个 shell 命令字符串</strong>；（如在 <code>print | &quot;./plus.sh &gt;&gt; output.txt&quot;;</code> 中就是 <code>&quot;./plus.sh &gt;&gt; output.txt&quot;</code>）</p></li><li><p>awk 语句中使用 shell 变量</p><ol><li><p><code>&quot;&#39;$var&#39;&quot;</code> 的形式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var=<span class="string">"test"</span></span><br><span class="line">awk <span class="string">'BEGIN&#123;print "'</span><span class="variable">$var</span><span class="string">'"&#125;'</span></span><br></pre></td></tr></table></figure></li></ol></li></ol><ol start="2"><li><p>变量中有空格时使用 <code>&quot;&#39;&quot;$var&quot;&#39;&quot;</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var=<span class="string">"this is a test"</span> </span><br><span class="line">awk <span class="string">'BEGIN&#123;print "'</span><span class="string">"<span class="variable">$var</span>"</span><span class="string">'"&#125;'</span></span><br></pre></td></tr></table></figure></li><li><p>变量中有空格，并且变量当作 shell 命令执行时，使用 <code>&quot;\&quot;&#39;&quot;${var}&quot;&#39;\&quot;&quot;</code> 形式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cmd=<span class="string">"./plus a and b.sh"</span></span><br><span class="line">awk <span class="string">'BEGIN&#123;print | "\"'</span><span class="string">"<span class="variable">$&#123;cmd&#125;</span>"</span><span class="string">'\""&#125;'</span></span><br></pre></td></tr></table></figure></li></ol><p>再把上面 awk 语句写入到一个脚本中，方便调用：</p><p><strong>input_test.sh</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">cmd=<span class="string">"<span class="variable">$&#123;1:-"./main.sh"&#125;</span>"</span></span><br><span class="line">data=<span class="string">"<span class="variable">$&#123;2:-"test_data.txt"&#125;</span>"</span></span><br><span class="line">output=<span class="string">"<span class="variable">$&#123;3:-"stdout.txt"&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">awk -v RS=<span class="string">""</span> <span class="string">'&#123;print $n | "\"'</span><span class="string">"<span class="variable">$&#123;cmd&#125;</span>"</span><span class="string">'\" &gt;&gt; \"'</span><span class="string">"<span class="variable">$&#123;output&#125;</span>"</span><span class="string">'\"";close("\"'</span><span class="string">"<span class="variable">$&#123;cmd&#125;</span>"</span><span class="string">'\" &gt;&gt; \"'</span><span class="string">"<span class="variable">$&#123;output&#125;</span>"</span><span class="string">'\"")&#125;'</span> <span class="variable">$&#123;data&#125;</span></span><br></pre></td></tr></table></figure><p>然后我们可以调用这个脚本，帮我们分割文本做输入输出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># input_test.sh [command] [data-file] [output-file]</span></span><br><span class="line"></span><br><span class="line">$ ./input_test.sh <span class="string">"./plus.exe"</span></span><br><span class="line"><span class="comment"># 接收三个参数，要测试的命令，数据文件，输出文件，都有默认值</span></span><br><span class="line"><span class="comment"># ==&gt; 将自动分割 test_data.txt 中的文本块分别对 plus.exe 做输入，并把结果依次写入 stdout.txt 中</span></span><br></pre></td></tr></table></figure><p><a href="./input_test.sh">可从这里获取 <code>input_test.sh</code> 源文件</a>。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="http://www.cnblogs.com/dong008259/archive/2011/12/06/2277287.html" rel="external nofollow noopener noreferrer" target="_blank">linux之awk用法 | 东方雨中漫步者</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;大致是希望使用 awk 读取一个文本文件，通过空行把文本分割成多个文本块，依次把每个文本块输入到一个程序，并把结果依次输出到指定文件。&lt;/p
      
    
    </summary>
    
    
      <category term="技术开发" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="Linux" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/Linux/"/>
    
      <category term="Shell" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/Linux/Shell/"/>
    
    
  </entry>
  
  <entry>
    <title>八大排序算法复杂度</title>
    <link href="https://kbservice.github.io/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E7%AE%97%E6%B3%95/%E5%85%AB%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%A4%8D%E6%9D%82%E5%BA%A6/"/>
    <id>https://kbservice.github.io/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E7%AE%97%E6%B3%95/%E5%85%AB%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%A4%8D%E6%9D%82%E5%BA%A6/</id>
    <published>2017-04-20T09:49:14.000Z</published>
    <updated>2020-01-10T04:00:08.454Z</updated>
    
    <content type="html"><![CDATA[<h2 id="排序算法时间空间复杂度表"><a href="#排序算法时间空间复杂度表" class="headerlink" title="排序算法时间空间复杂度表"></a>排序算法时间空间复杂度表</h2><table><thead><tr><th align="center">排序方法</th><th align="center">平均时间</th><th align="center">最坏时间</th><th align="center">辅助空间</th><th align="center">稳定性</th></tr></thead><tbody><tr><td align="center">冒泡排序</td><td align="center">$O(n^2)$</td><td align="center">$O(n^2)$</td><td align="center">$O(1)$</td><td align="center">稳定</td></tr><tr><td align="center">简单选择排序</td><td align="center">$O(n^2)$</td><td align="center">$O(n^2)$</td><td align="center">$O(1)$</td><td align="center">稳定</td></tr><tr><td align="center">直接插入排序</td><td align="center">$O(n^2)$</td><td align="center">$O(n^2)$</td><td align="center">$O(1)$</td><td align="center">稳定</td></tr><tr><td align="center">希尔排序</td><td align="center">$O(n \log n)$</td><td align="center">$O(n^2)$</td><td align="center">$O(1)$</td><td align="center">不稳定</td></tr><tr><td align="center">堆排序</td><td align="center">$O(n \log n)$</td><td align="center">$O(n \log n)$</td><td align="center">$O(1)$</td><td align="center">不稳定</td></tr><tr><td align="center">并归排序</td><td align="center">$O(n \log n)$</td><td align="center">$O(n \log n)$</td><td align="center">$O(n)$</td><td align="center">稳定</td></tr><tr><td align="center">快速排序</td><td align="center">$O(n \log n)$</td><td align="center">$O(n^2)$</td><td align="center">$O(n \log n)$</td><td align="center">不稳定</td></tr><tr><td align="center">基数排序</td><td align="center">$O(d(n+r))$</td><td align="center">$O(d(n+r))$</td><td align="center">$O(n)$</td><td align="center">稳定</td></tr></tbody></table><p>注：基数排序中，d 为位数，r 为基数，n 为原数组个数。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li>大话数据结构 | 程杰</li><li><a href="https://www.toptal.com/developers/sorting-algorithms/" rel="external nofollow noopener noreferrer" target="_blank">Sorting Algorithms Animations</a></li><li><a href="https://zh.wikipedia.org/wiki/冒泡排序" rel="external nofollow noopener noreferrer" target="_blank">冒泡排序 | Wikipedia</a> </li><li><a href="https://zh.wikipedia.org/wiki/选择排序" rel="external nofollow noopener noreferrer" target="_blank">选择排序 | Wikipedia</a> </li><li><a href="https://zh.wikipedia.org/wiki/快速排序" rel="external nofollow noopener noreferrer" target="_blank">快速排序 | Wikipedia</a> </li><li><a href="https://zh.wikipedia.org/wiki/堆排序" rel="external nofollow noopener noreferrer" target="_blank">堆排序| Wikipedia</a> </li><li><a href="https://zh.wikipedia.org/wiki/希尔排序" rel="external nofollow noopener noreferrer" target="_blank">希尔排序 | Wikipedia</a> </li><li><a href="https://zh.wikipedia.org/wiki/归并排序" rel="external nofollow noopener noreferrer" target="_blank">归并排序 | Wikipedia</a> </li><li><a href="http://blog.csdn.net/21aspnet/article/details/7199579" rel="external nofollow noopener noreferrer" target="_blank">维基百科上的算法和数据结构链接很强大 | 21aspnet</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;排序算法时间空间复杂度表&quot;&gt;&lt;a href=&quot;#排序算法时间空间复杂度表&quot; class=&quot;headerlink&quot; title=&quot;排序算法时间空间复杂度表&quot;&gt;&lt;/a&gt;排序算法时间空间复杂度表&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;c
      
    
    </summary>
    
    
      <category term="技术开发" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="算法" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://kbservice.github.io/wiki/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>IaaS, PaaS, SaaS 概念</title>
    <link href="https://kbservice.github.io/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E6%9E%B6%E6%9E%84/IaaS-PaaS-SaaS-%E6%A6%82%E5%BF%B5/"/>
    <id>https://kbservice.github.io/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E6%9E%B6%E6%9E%84/IaaS-PaaS-SaaS-%E6%A6%82%E5%BF%B5/</id>
    <published>2017-04-18T15:15:15.000Z</published>
    <updated>2020-01-10T04:00:08.454Z</updated>
    
    <content type="html"><![CDATA[<p>云服务通常将其提供的服务自下而上分成三层：<strong>基础设施(infrastructure)、平台(platform)和软件(software)</strong>。</p><h2 id="IaaS"><a href="#IaaS" class="headerlink" title="IaaS"></a>IaaS</h2><p><strong>Infrastructure-as-a-Service(基础设施即服务)</strong></p><p>第一层叫做 IaaS，有时候也叫做 Hardware-as-a-Service，如果你想在办公室或者公司的网站上运行一些应用（比如自己开发好的 APP 或是网络游戏，你需要去买服务器，成本太高了。</p><p>但是现在有IaaS，你可以将硬件外包给这些专业的公司，这些公司会提供场外服务器，存储和网络硬件，你花钱租用就行。</p><p>这样就节省了维护成本和办公场地，并且你可以在任何时候利用这些硬件来运行其应用。</p><h2 id="PaaS"><a href="#PaaS" class="headerlink" title="PaaS"></a>PaaS</h2><p><strong>Platform-as-a-Service（平台即服务）</strong></p><p>第二层就是 PaaS，某些时候也叫做中间件。PaaS 是面向软件开发者的服务，云计算平台提供硬件，OS， 编程语言，开发库，部署工具， 帮助软件开发者更快的开发软件服务。</p><p>云服务商将软件开发的云端开发平台和软件运营的云端运行环境（包括中间件、数据库、we b服务、消息总线等基础通用服务）作为一种服务，提供给最终用户。</p><p>换句话说，这些 PaaS 服务商提供的都是基础开发服务平台，主要目的就是让你把精力专注在应用层面的开发上面，而不需要浪费在这些基础重复性的事情上，也不用担心开发完成后部署问题。</p><h2 id="SaaS"><a href="#SaaS" class="headerlink" title="SaaS"></a>SaaS</h2><p><strong>Software-as-a-Service（软件即服务）</strong></p><p>简单说就是人家把你想要的功能开发好成应用软件，然后直接卖账号给你用，你也不需要担心服务器、带宽、应用开发等问题，直接交钱使用就行。</p><p>不再面向开发，而是直接面向企业或普通用户，企业改改 logo，直接给用户使用。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="https://www.aliyun.com/zixun/content/1_5_15871.html" rel="external nofollow noopener noreferrer" target="_blank">IaaS PaaS和SaaS公司的作用 | 盐漂浮草</a></li><li><a href="https://zhihu.com/question/21641778/answer/91301221" rel="external nofollow noopener noreferrer" target="_blank">谁能举个通俗易懂的例子告诉我IAAS，SAAS，PAAS的区别？ | 东坪子的回答</a></li><li><a href="https://zhihu.com/question/21641778/answer/62523535" rel="external nofollow noopener noreferrer" target="_blank">谁能举个通俗易懂的例子告诉我IAAS，SAAS，PAAS的区别？ | 何足道的回答</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;云服务通常将其提供的服务自下而上分成三层：&lt;strong&gt;基础设施(infrastructure)、平台(platform)和软件(software)&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;IaaS&quot;&gt;&lt;a href=&quot;#IaaS&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="技术开发" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="架构" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="云服务" scheme="https://kbservice.github.io/wiki/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>Java 访问控制符</title>
    <link href="https://kbservice.github.io/wiki/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/Java/Java-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E7%AC%A6/"/>
    <id>https://kbservice.github.io/wiki/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/Java/Java-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E7%AC%A6/</id>
    <published>2017-04-17T16:28:59.000Z</published>
    <updated>2020-01-10T04:00:08.471Z</updated>
    
    <content type="html"><![CDATA[<h2 id="访问控制符与访问控制级别"><a href="#访问控制符与访问控制级别" class="headerlink" title="访问控制符与访问控制级别"></a>访问控制符与访问控制级别</h2><p>Java 提供了 3 个访问控制符：private、protected 和 public，分别代表了 3 个访问控制级别，另外还有一个不加任何访问控制符的默认访问控制级别（friendly，也称 default），也就是共 4 个访问控制级别。</p><p>Java的访问控制级别由大到小为：</p><p><strong>public</strong> –&gt; <strong>protected</strong> –&gt; <strong>friendly</strong> –&gt; <strong>private</strong></p><h2 id="访问控制表"><a href="#访问控制表" class="headerlink" title="访问控制表"></a>访问控制表</h2><p>小结一下其控制可访问作用域</p><table><thead><tr><th align="center">控制级别与作用域</th><th align="center">同一类中</th><th align="center">同一包中</th><th align="center">子类中</th><th align="center">外部包任意类</th></tr></thead><tbody><tr><td align="center">public</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center">√</td></tr><tr><td align="center">protected</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center"></td></tr><tr><td align="center">friendly</td><td align="center">√</td><td align="center">√</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">private</td><td align="center">√</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;访问控制符与访问控制级别&quot;&gt;&lt;a href=&quot;#访问控制符与访问控制级别&quot; class=&quot;headerlink&quot; title=&quot;访问控制符与访问控制级别&quot;&gt;&lt;/a&gt;访问控制符与访问控制级别&lt;/h2&gt;&lt;p&gt;Java 提供了 3 个访问控制符：private、prot
      
    
    </summary>
    
    
      <category term="程序语言" scheme="https://kbservice.github.io/wiki/categories/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/"/>
    
      <category term="Java" scheme="https://kbservice.github.io/wiki/categories/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/Java/"/>
    
    
      <category term="Java" scheme="https://kbservice.github.io/wiki/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Git 清理已追踪或未添加追踪的文件</title>
    <link href="https://kbservice.github.io/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/Git/Git-%E6%B8%85%E7%90%86%E5%B7%B2%E8%BF%BD%E8%B8%AA%E6%88%96%E6%9C%AA%E6%B7%BB%E5%8A%A0%E8%BF%BD%E8%B8%AA%E7%9A%84%E6%96%87%E4%BB%B6/"/>
    <id>https://kbservice.github.io/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/Git/Git-%E6%B8%85%E7%90%86%E5%B7%B2%E8%BF%BD%E8%B8%AA%E6%88%96%E6%9C%AA%E6%B7%BB%E5%8A%A0%E8%BF%BD%E8%B8%AA%E7%9A%84%E6%96%87%E4%BB%B6/</id>
    <published>2017-04-17T14:51:30.000Z</published>
    <updated>2020-01-10T04:00:08.449Z</updated>
    
    <content type="html"><![CDATA[<p><code>git add</code> 将文件及其修改添加到 Git 索引和追踪当中，也就是将文件快照放入暂存区当中，但我们有时候想要<strong>丢弃本次修改过并添加到暂存区的内容</strong>，或者需要<strong>删除未被追踪的文件</strong>。</p><h2 id="git-checkout"><a href="#git-checkout" class="headerlink" title="git checkout"></a>git checkout</h2><p><code>git checkout</code> 是把文件<strong>从暂存区中恢复到工作区</strong>，也就是说源文件如果被修改，再使用 <code>git add</code> 添加到暂存区了，<code>git checkout</code> 无法把他再恢复到源文件，只能恢复到暂存时的状态。</p><h2 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a>git reset</h2><p><code>git reset</code> 可以用来重置工作区和暂存区还能更改 <code>HEAD</code> 指向，可以达到我们的丢弃本次修改到暂存区的目的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Usage: git reset [&lt;mode&gt;] [&lt;commit&gt;]</span></span><br><span class="line"><span class="comment"># eg: git reset --mixed HEAD</span></span><br><span class="line">$ git reset HEAD</span><br><span class="line">$ git checkout .</span><br></pre></td></tr></table></figure><p>首先使用 <code>git reset HEAD</code> 把暂存区重置到本次提交，再用 <code>checkout</code> 恢复文件到暂存区的状态，但我们暂存区已经重置了，所以实际 <code>checkout</code> 恢复到的是本次提交时的初始状态了。</p><p><code>git reset</code> 有五种模式，不写明模式参数时，默认为 <code>--mixed</code>，几种模式间主要的差异在于重置的区域不同，这里总结下其异同：（表中不写的位置代表无操作）</p><table><thead><tr><th align="center"></th><th align="center">重置工作区</th><th align="center">重置暂存区</th><th align="center">将 HEAD 指向指定 commit</th></tr></thead><tbody><tr><td align="center">–hard</td><td align="center">√</td><td align="center">√</td><td align="center">√</td></tr><tr><td align="center">–soft</td><td align="center"></td><td align="center"></td><td align="center">√</td></tr><tr><td align="center">–mixed</td><td align="center"></td><td align="center">√</td><td align="center">√</td></tr><tr><td align="center">–merge</td><td align="center"></td><td align="center">暂存区有文件则重置失败</td><td align="center">√</td></tr><tr><td align="center">–keep</td><td align="center"></td><td align="center">暂存区有文件则重置失败</td><td align="center">√</td></tr></tbody></table><p>所以刚才上面两行命令， <code>reset</code> 后再 <code>checkou</code> ，可以用 <code>--hard</code> 代替：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD</span><br></pre></td></tr></table></figure><h2 id="git-clean"><a href="#git-clean" class="headerlink" title="git clean"></a>git clean</h2><p>顺便一提，<code>git reset --hard</code> 是直接重置整个工作区，所以也会把未被添加追踪的新文件也删除了；但 <code>git checkout</code> 是恢复，所以不会影响未添加追踪的新文件。</p><p><code>git clean</code> 就是用来删除未被添加追踪的文件和文件夹的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clean -n  <span class="comment"># 将显示哪些未被追踪的文件和文件夹可以清理</span></span><br><span class="line">git clean -d  <span class="comment"># 清理未被追踪的文件夹</span></span><br><span class="line">git clean -f  <span class="comment"># 清理未被追踪的文件</span></span><br><span class="line">git clean -df  <span class="comment"># 清理未被追踪的文件和文件夹</span></span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="http://blog.csdn.net/hudashi/article/details/7664464/" rel="external nofollow noopener noreferrer" target="_blank">git reset简介</a></li><li><a href="http://blog.csdn.net/felix_f/article/details/8777463" rel="external nofollow noopener noreferrer" target="_blank">Git 工作区、暂存区和版本库</a></li><li><a href="http://blog.csdn.net/yang3wei/article/details/9399723" rel="external nofollow noopener noreferrer" target="_blank">git 删除已经 add 的文件</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;git add&lt;/code&gt; 将文件及其修改添加到 Git 索引和追踪当中，也就是将文件快照放入暂存区当中，但我们有时候想要&lt;strong&gt;丢弃本次修改过并添加到暂存区的内容&lt;/strong&gt;，或者需要&lt;strong&gt;删除未被追踪的文件&lt;/strong&gt;。&lt;/p
      
    
    </summary>
    
    
      <category term="技术开发" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="Git" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/Git/"/>
    
    
      <category term="Git" scheme="https://kbservice.github.io/wiki/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>语义化版本号 2.0.0</title>
    <link href="https://kbservice.github.io/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AF%AD%E4%B9%89%E5%8C%96%E7%89%88%E6%9C%AC%E5%8F%B7-2-0-0/"/>
    <id>https://kbservice.github.io/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AF%AD%E4%B9%89%E5%8C%96%E7%89%88%E6%9C%AC%E5%8F%B7-2-0-0/</id>
    <published>2017-03-28T09:20:08.000Z</published>
    <updated>2020-01-10T04:00:08.457Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>版本格式：主版本号.次版本号.修订号，版本号递增规则如下：</p><ol><li>主版本号：当你做了不兼容的 API 修改，</li><li>次版本号：当你做了向下兼容的功能性新增，</li><li>修订号：当你做了向下兼容的问题修正。</li></ol><p>先行版本号及版本编译信息可以加到“主版本号.次版本号.修订号”的后面，作为延伸。</p><p>考虑使用这样的版本号格式：XYZ （主版本号.次版本号.修订号）修复问题但不影响API 时，递增修订号；API 保持向下兼容的新增及修改时，递增次版本号；进行不向下兼容的修改时，递增主版本号。</p><p>我称这套系统为“语义化的版本控制”，在这套约定下，版本号及其更新方式包含了相邻版本间的底层代码和修改内容的信息。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="http://semver.org/" rel="external nofollow noopener noreferrer" target="_blank">Semantic Versioning 2.0.0</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;p&gt;版本格式：主版本号.次版本号.修订号，版本号递增规则如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主版本号：当你做了不兼容的 API 修改，&lt;/li&gt;

      
    
    </summary>
    
    
      <category term="技术开发" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="软件工程" scheme="https://kbservice.github.io/wiki/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="版本控制" scheme="https://kbservice.github.io/wiki/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
      <category term="开发规范" scheme="https://kbservice.github.io/wiki/tags/%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>Windows 系统入门操作导图</title>
    <link href="https://kbservice.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/Windows%E7%B3%BB%E7%BB%9F%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C%E5%AF%BC%E5%9B%BE/"/>
    <id>https://kbservice.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/Windows%E7%B3%BB%E7%BB%9F%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C%E5%AF%BC%E5%9B%BE/</id>
    <published>2017-03-22T12:18:52.000Z</published>
    <updated>2020-01-10T04:00:08.480Z</updated>
    
    <content type="html"><![CDATA[<p>本导图适合刚接触电脑，刚开始使用 Windows 系统，以后可能会经常使用电脑做<strong>技术</strong>工作，但目前<strong>零基础的新手</strong>，作为入门引导。</p><p>目的为改善现有不良使用习惯，规范一些操作行为，了解一些操作背后的原理，避免安装病毒和流氓软件，简单提高电脑使用效率。</p><p>整个导图分为 <strong>「1-文件、2-文件系统、3-命令行界面、4-搜索引擎使用、5-软件下载安装、6-常用系统工具」</strong> ，共六个大点，请依次阅读学习；整个<strong>主线</strong>以第五点 <strong>软件下载安装</strong> 为中心，将前四点内容依次串联起来，形成结构化知识。</p><p>导图类似于大纲框架，每点的分支<strong>只具体到内容要点</strong>，每个要点需要根据讲解或者查阅详细资料深入其内容。</p><p><img src="./Windows%E7%B3%BB%E7%BB%9F%E5%88%9D%E5%AD%A6%E6%93%8D%E4%BD%9C%E5%9F%BA%E7%A1%80.svg" alt="Windows 系统初学入门操作基础导图"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本导图适合刚接触电脑，刚开始使用 Windows 系统，以后可能会经常使用电脑做&lt;strong&gt;技术&lt;/strong&gt;工作，但目前&lt;strong&gt;零基础的新手&lt;/strong&gt;，作为入门引导。&lt;/p&gt;
&lt;p&gt;目的为改善现有不良使用习惯，规范一些操作行为，了解一些操作背后的原
      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://kbservice.github.io/wiki/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
  </entry>
  
  <entry>
    <title>字符集与字符编码</title>
    <link href="https://kbservice.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%AD%97%E7%AC%A6%E9%9B%86%E4%B8%8E%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
    <id>https://kbservice.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%AD%97%E7%AC%A6%E9%9B%86%E4%B8%8E%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/</id>
    <published>2017-03-21T09:10:49.000Z</published>
    <updated>2017-04-03T14:10:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="字符集（Charset）"><a href="#字符集（Charset）" class="headerlink" title="字符集（Charset）"></a>字符集（Charset）</h2><blockquote><p>是一个系统支持的所有抽象字符的集合。字符是各种文字和符号的总称，包括各国家文字、标点符号、图形符号、数字等。</p></blockquote><p>简单的说字符集相当于一种映射关系，一个种类的集合中，把每个字符分配一个唯一的、一一对应的编号。</p><p>举个例子比如：</p><table><thead><tr><th align="center">编号</th><th align="center">编号表示字符</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">A</td></tr><tr><td align="center">2</td><td align="center">B</td></tr><tr><td align="center">3</td><td align="center">C</td></tr><tr><td align="center">…</td><td align="center">…</td></tr><tr><td align="center">26</td><td align="center">Z</td></tr><tr><td align="center">27</td><td align="center">[</td></tr><tr><td align="center">28</td><td align="center">\</td></tr><tr><td align="center">…</td><td align="center">…</td></tr></tbody></table><p>像例子中这样，<strong>一组映射想要表示的字符与其编号的集合就叫字符集</strong>。</p><p>不同的字符集有不同的映射，比如 <code>ASCII 字符集</code> 的映射中， 映射 <code>A-Z</code> 的编号就是 <code>65-90</code>，与上面例子中的编号就不一样，这就是两个不兼容的字符集。</p><h2 id="字符编码（Character-Encoding）"><a href="#字符编码（Character-Encoding）" class="headerlink" title="字符编码（Character Encoding）"></a>字符编码（Character Encoding）</h2><p>在上面过程中，我们已经给每个字符都分配了一个唯一的编号，但是我们要怎么把打出来的一段文字存到文件中去呢？你可能会觉得的奇怪，这还不简单，计算机是存储的二进制文件，我们把文字中每一个字符编号数字对应的十六进制保存为一个字节，按照字节把文字中的所有字符编号依次写入到文件中不就完了么？</p><p>额，这就会出问题了。上面我们是以 ASCII 字符集来举例的，ASCII 字符集将字母、数字和其它符号编号，并用 8 比特的二进制来表示这个整数；因为每个字符都只有一个字节，所以看起来好像没什么问题；那我们再来考虑下其他的一些字符集。</p><p>比如说中文的 GBK 字符集中部分：</p><table><thead><tr><th align="center">编号</th><th align="center">编号表示字符</th></tr></thead><tbody><tr><td align="center">45217</td><td align="center">啊</td></tr><tr><td align="center">45218</td><td align="center">阿</td></tr><tr><td align="center">45219</td><td align="center">埃</td></tr><tr><td align="center">…</td><td align="center">…</td></tr></tbody></table><p>这些编号超过 255 的字符，显然不能用一个字节来表示了，最少也要两个字符。再来按照上面的说法，把它们编号对应的十六进制依次写进文件中，假如这段文本中既有中文又有英文，那么问题来了：</p><p>我们在读取文件的时候，<strong>读到了 4 个字节，那它究竟是表示两个汉字，还是四个英文字母，还是一个汉字两个字母呢？</strong></p><p>看吧，不加限制的直接保存编号会产生一定的歧义。为了消除这种歧义，方便计算机能够简单的识别和存储字符，我们引入一种 <strong>编码规则</strong>，比如 <strong>所有字符编号对应的十六进制均按两字节存储，不够两字节的编号在前面添加 <code>0x00</code> 来补齐两字节</strong>。这样就解决了上面的歧义问题，所有字符都储存为两字节，每次读取两字节来表示一个字符，包括英文也是；这就是一种典型的 <strong>双字节定长编码</strong>。</p><p>嗯，歧义的问题是解决了，但是又有新的问题，上面我们是说至少要两个字节的字符集，要是哪天我们遇到一个要四个字节才能表示字符的字符集，那就得使用 <strong>四字节定长编码</strong>，这里就存在巨大的浪费。我们这个字符集中前十分之一编号的常用字符时，本来只需要一个字节来表示的字符，现在统统使用四个字节，一篇文章的体积无形中变大了三倍，这就 <strong>极大的浪费了存储空间</strong>。</p><p>于是人们就在想，能不能<strong>让原来只需要一个字节表示的字符编号，现在还是用一个字节来储存，原来只需要两个字节表示的字符编号，还是用两个字节来储存，依次类推，都只用其能表示的最小编码长度呢？</strong></p><p>答案是有的，于是有了 <strong>变长字符编码</strong>。</p><p>上面字符集处我们讲到过，每个字符有唯一的，一一对应的编号，在编码后也应如此。这就要求 <strong>每个字符有唯一编码，每个码字是唯一可译的</strong>。</p><p><strong>《信息论》</strong> 中指出，<strong>只有异前置码是唯一可译码</strong>。如果一个码的任何一个码字都不是其他码字的前缀，则称该码为异前置码（前缀码）。异前置码的充要条件是满足<strong>克拉夫特不等式</strong>（Kraft Inequality），即：<br>$$<br>\sum_{i=1}^n m{-k_i} \leq 1<br>,<br>\text{ ($m$ 为码元数，$k_i$ 指第 $i$ 个码元长度)}<br>$$<br>我们来看一个常见的变长编码（UTF-8）的部分（前三字节）：</p><table><thead><tr><th align="center">Byte0</th><th align="center">Byte1</th><th align="center">Byte2</th></tr></thead><tbody><tr><td align="center">0xxxxxxx</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">110xxxxx</td><td align="center">10xxxxxx</td><td align="center"></td></tr><tr><td align="center">1110xxxx</td><td align="center">10xxxxxx</td><td align="center">10xxxxxx</td></tr></tbody></table><blockquote><p>在 ASCII 码的范围，用一个字节表示，超出 ASCII 码的范围就用字节表示，这就形成了我们上面看到的 UTF-8 的表示方法，这様的好处是当 Unicode 文件中只有 ASCII 码时，存储的文件都为一个字节，所以就是普通的 ASCII 文件无异，读取的时候也是如此，所以能与以前的 ASCII 文件兼容。</p><p>大于 ASCII 码的，就会由上面的第一字节的前几位表示该 Unicode 字符的长度，比如 <code>110xxxxx</code> 前三位的二进制表示告诉我们这是个 2Bytes 的 Unicode 字符；<code>1110xxxx</code> 是个三位的 Unicode 字符，依此类推；<code>xxx</code> 的位置由字符编码数的二进制表示的位填入。越靠右的<code>x</code>具有越少的特殊意义。只用最短的那个足够表达一个字符编码数的多字节串。注意在多字节串中，第一个字节的开头<code>1</code>的数目就是整个串中字节的数目。</p></blockquote><p>上面提到的 <strong>Unicode</strong> 就是一种伟大的编码方案标准！<strong>Unicode</strong> 是计算机科学领域里的一项<strong>业界标准</strong>，它为让计算机方便的使用统一而兼容的编码表达任意语言的任意字符、用以取代现有的字符编码而设计，也被称为 <strong>万国码、统一码</strong>。Unicode 标准涵盖的内容很宽，除了视觉上的字形、编码方法、标准的字符编码外，还包含了字符特性，如大小写字母。</p><p>我们常说的 Unicode 指的是 <strong>Unicode 字符集</strong>，是将世界上大部分国家的文字做了整理、编排，不断发展更新的多个文字种类平面的编号集合；Unicode 字符集的编码有多种，其实现方式都称为 <strong>Unicode 转换格式</strong> （Unicode Transformation Format，简称为 <strong>UTF</strong>）。</p><p>而 <strong>UTF-8</strong> 就是只 <strong>Unicode 字符集</strong> 实现中的一种字符编码方式。</p><h2 id="字符集与字符编码的混称"><a href="#字符集与字符编码的混称" class="headerlink" title="字符集与字符编码的混称"></a>字符集与字符编码的混称</h2><p>总的来说，简单的理解， <strong>字符编码就是字符集这种映射编号具体到计算机处理时，所用编码规则的实现方式。</strong> </p><p>比如 Unicode 字符集的字符编码方式就有 UTF-8、UTF-16、UTF-32 等。</p><p>但是也有很多我们常说的字符编码标准中，即包含了字符集也包含了字符编码，比如 <code>ASCII 字符集</code> 和 <code>ASCII 字符编码</code>，<code>GB2312 字符集</code> 和 <code>GB2312 字符编码</code>，<code>GBK 字符集</code> 和 <code>GBK 字符编码</code> 等；</p><p>于是人们也常把它们混称，将字符集和字符编码都用标准方案的名称来统称，比如 <code>ASCII 编码</code>、 <code>GBK 编码</code>、<code>GB2312 编码</code>。但是我们在谈论的时候，应该自己根据话语环境分辨其具体指代意思而不至出现歧义。</p><h2 id="现代编码模型"><a href="#现代编码模型" class="headerlink" title="现代编码模型"></a>现代编码模型</h2><p>在 Unicode 技术报告 Unicode Technical Report (UTR) 中，将现代编码模型分为五个层次：</p><ol><li><strong>抽象字符表</strong>（Abstract character repertoire）是一个系统支持的所有抽象字符的集合。字符表反映了如何将书写系统分解成线性信息单元。例如拉丁、希腊字母表分为字母、数字、标点这样的一些字符，它们都能按照一种简单的线性序列排列，字符表包括预先编号的字母和符号的组合。</li><li><strong>编码字符集</strong>（CCS: Coded Character Set）是将字符集 $\displaystyle C$ 中每个字符映射到一个坐标（整数值对：x, y）或者表示为一个非负整数 $\displaystyle N$ 。字符集及码位的映射称为编码字符集。多个编码字符集可以表示同样的字符表，由此产生了<strong>编码空间</strong>（encoding space）的概念：简单说就是包含所有字符的表的维度。编码空间还可以用其子集来表述，如行、列、面（plane）等。编码空间中的一个位置（position）称为 <strong>码位</strong>（code point）。一个字符所占用的码位称为 <strong>码位值</strong>（code point value）。编码字符集就是把抽象字符映射为码位值。</li><li><strong>字符编码表</strong>（CEF: Character Encoding Form），也称为 <code>storage format</code>，是将编码字符集的非负整数值（即抽象的码位）转换成有限比特长度的整型值（称为 <strong>码元</strong> code units）的序列。对于定长编码来说是个到自身的映射（mapping），但对于变长编码来说，该映射比较复杂，即把一些码位映射到一个码元，把另外一些码位映射到由多个码元组成的序列。</li><li><strong>字符编码方案</strong>（CES: Character Encoding Scheme），也称作 <code>serialization format</code>。将定长的整型值（即码元）映射到 8 位字节序列，以便编码后的数据的文件存储或网络传输。例如在使用Unicode的场合，使用一个简单的字符来指定字节顺序是大端序或者小端序（UTF-16BE, UTF-16LE）。</li><li><strong>传输编码语法</strong>（transfer encoding syntax），用于处理上一层次的字符编码方案提供的字节序列。一般其功能包括两种：一是把字节序列的值映射到一套更受限制的值域内，以满足传输环境的限制，例如 Base64；另一是压缩字节序列的值，如 LZW 或者进程长度编码等无损压缩技术。</li></ol><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="https://en.wikipedia.org/wiki/Character_encoding" rel="external nofollow noopener noreferrer" target="_blank">Character encoding | Wikipedia</a></li><li><a href="https://en.wikipedia.org/wiki/Unicode" rel="external nofollow noopener noreferrer" target="_blank">Unicode | Wikipedia</a></li><li><a href="http://www.cnblogs.com/skynet/archive/2011/05/03/2035105.html" rel="external nofollow noopener noreferrer" target="_blank">字符集和字符编码 | 吴秦</a></li><li><a href="http://zhihu.com/question/24340504/answer/28902204" rel="external nofollow noopener noreferrer" target="_blank">计算机系统是如何显示一个字符的？ - 知乎</a></li><li><a href="http://zhihu.com/question/20650946/answer/15745831" rel="external nofollow noopener noreferrer" target="_blank">Windows 记事本的 ANSI、Unicode、UTF-8 这三种编码模式有什么区别？ - 知乎 | 梁海的回答</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;字符集（Charset）&quot;&gt;&lt;a href=&quot;#字符集（Charset）&quot; class=&quot;headerlink&quot; title=&quot;字符集（Charset）&quot;&gt;&lt;/a&gt;字符集（Charset）&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;是一个系统支持的所有抽象字符的集合
      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://kbservice.github.io/wiki/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
  </entry>
  
  <entry>
    <title>曲线调整工具与直方图</title>
    <link href="https://kbservice.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9B%BE%E5%BD%A2%E5%9B%BE%E5%83%8F/%E6%9B%B2%E7%BA%BF%E8%B0%83%E6%95%B4%E5%B7%A5%E5%85%B7/"/>
    <id>https://kbservice.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9B%BE%E5%BD%A2%E5%9B%BE%E5%83%8F/%E6%9B%B2%E7%BA%BF%E8%B0%83%E6%95%B4%E5%B7%A5%E5%85%B7/</id>
    <published>2017-03-21T07:05:28.000Z</published>
    <updated>2020-01-10T04:00:08.486Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><p><strong>「曲线工具」</strong>这个东西，经常修图或做视频的人一定不陌生，它在很多图像视频工具中都有出现，比如 AE、PR、PS、LR 等中；其强大之处自不用我多说，这里主要针对还未入门的 <strong>零基础</strong> 的朋友作一个基本的介绍和认识。</p><p><img src="./PS%E6%9B%B2%E7%BA%BF%E5%B7%A5%E5%85%B7.jpg" alt="PS中的曲线工具"></p><p>在谈到「曲线工具」之前，不得不先谈到图像<strong>「直方图」</strong>这个东西；</p><h2 id="「直方图」"><a href="#「直方图」" class="headerlink" title="「直方图」"></a>「直方图」</h2><p>简单的来说，<strong>直方图是统计图片中按照不同的明暗级别从黑到白（从暗到明），统计在某个亮度的像素数量有多少。</strong>（以下谈到直方图，若无特指，那均指 RGB 全通道亮度直方图，不谈论色相）</p><p>我们先看看 PS 中的直方图是什么样的；</p><p><img src="./PS%E5%9B%BE%E5%83%8F%E7%9B%B4%E6%96%B9%E5%9B%BE.jpg" alt="PS中的图像直方图"></p><p>四个框中，最上面就是全通道的直方图，下面三个依次是 RGB 三个通道的直方图；<strong>直方图的横轴表示亮度级别</strong>，左边表示最暗，向右依次变亮，最右边表示最亮最白；<strong>纵轴表示像素数量</strong>。</p><p>我们再来看一个简化版的示意图；</p><p><img src="./%E7%9B%B4%E6%96%B9%E5%9B%BE%E5%9D%90%E6%A0%87%E8%BD%B4%E8%A7%A3%E9%87%8A.jpg" alt="直方图简化示意"></p><p>举个例子，假设上面这张简化的直方图是统计一张 <strong>只有 22 个像素</strong>的图片，那么可以从直方图中看到 <strong>统计结果</strong>：</p><p>纯黑的像素有 3 个、灰度一级的像素有 2 个、中度灰色的有 5 个、 …… 、纯白的有 2 个。</p><p>嗯，上面这个图结合例子很好理解吧，那让我们<strong>把它扩展一下，道理还是不变，只是把分级加精细一点，像素加多一点</strong>，导出一张真实一点的我们实际中常见样子的直方图；</p><p><img src="./%E7%9B%B4%E6%96%B9%E5%9B%BE%E5%B8%B8%E8%A7%81%E5%BD%A2%E5%BC%8F%E7%A4%BA%E4%BE%8B.jpg" alt="直方图常见形式示例"></p><p>直观看出，这张直方图所代表的原始图片中，<strong>中等偏亮的像素点在整个图片中占主体</strong>；也就是图片整体颜色是偏亮系的，看起来不是暗色调的。</p><p><strong>类似的，假设图片直方图中只形成了一个山峰，如果山峰位置偏右边，就表示图片整体是暗色调的；如果山峰位置偏左，就表示图片整体看起来是亮色系的，整体色调是明亮的。</strong></p><p>【这里注意，摄影和修图的重点都是自己到底想表达什么，不要过度纠结于传统观念，就认为山峰靠右就一定是曝光失误造成欠曝一定要调整曝光等等；主要是看自己的想法，有些场景可能就需要这样，不是失误欠曝，比如表现夜空中的明月或星空。】</p><p>说完直方图，我们就可以回过来看<strong>「曲线工具」</strong>了。</p><h2 id="「曲线工具」"><a href="#「曲线工具」" class="headerlink" title="「曲线工具」"></a>「曲线工具」</h2><p><img src="./PS%E6%9B%B2%E7%BA%BF%E5%B7%A5%E5%85%B7.jpg" alt="PS中的曲线工具"></p><p>再看到曲线工具，就要注意调整框内，背景中的 <strong>阴影山峰</strong> 了，这就是刚刚讲的 <strong>直方图</strong>。</p><p><strong>「曲线工具」</strong> 其实是 <strong>曲线调整 + 直方图</strong>，两者 <strong>横坐标共用，含义都一样</strong>，指 <strong>亮度分级</strong>；</p><p><strong>但纵坐标含义就不一样了</strong>。</p><p><strong>曲线工具的纵坐标也是指亮度分级，没错，纵坐标和横坐标的含义与数值分布完全一样！</strong></p><p>再看上面这条线，虽然名字叫「曲线工具」，但是打开工具初始状态下这根线就是直线，只不过可以添加关键点来把直线拖成曲线。</p><p>初始状态下的直线，是从左下连到右上的，相当于是从横纵轴都最暗的地方，连到横纵轴都最亮的地方；</p><p>也就是： </p><p>$$y = f(x) = x , (0 \leq x \leq 255)$$</p><p>现在我们再说一下纵坐标 y 和横坐标 x 的一点区别；<strong>这条线上一个点的横坐标值，表示图片上的某个原始亮度值，纵坐标表示这个原始亮度经过调整后的亮度变成了多少。</strong></p><p>合起来的意思就是，这条曲线（或直线）表示对原图色彩的一种映射，<strong>把原图的每个色彩亮度，映射到现在的每个对应的色彩亮度</strong>，即：</p><p>$$y = f(x) , (0 \leq x \leq 255 , x = 原始亮度 , y = 调整后亮度)$$</p><p>比如说常见的 S 型曲线可以加深对比度，其实就是把原本暗的变得更暗，把原本亮的变得更亮，所以对比度就变高了。</p><p>基于这个道理，接下来解释几种基本曲线的调整方式；</p><h3 id="初始直线"><a href="#初始直线" class="headerlink" title="初始直线"></a>初始直线</h3><p><img src="./%E6%9B%B2%E7%BA%BF%E8%B0%83%E6%95%B4-%E5%88%9D%E5%A7%8B.jpg" alt="初始直线"></p><p>初始直线相当于原本什么亮度现在还是什么亮度，什么都没变，就是画面原本的样子。</p><h3 id="上凸曲线"><a href="#上凸曲线" class="headerlink" title="上凸曲线"></a>上凸曲线</h3><p><img src="./%E6%9B%B2%E7%BA%BF%E8%B0%83%E6%95%B4-%E4%B8%8A%E5%87%B8-%E5%8A%A0%E4%BA%AE.jpg" alt="上凸曲线把整个画面变亮"></p><p>对比原始图片，现在用的上凸曲线除了端点的每个点都在 $y = x$ 直线上方，也就是不管是暗的还是亮的每个点都不同程度的加亮了一些，所以整个画面看起来都亮了。</p><h3 id="下凸曲线"><a href="#下凸曲线" class="headerlink" title="下凸曲线"></a>下凸曲线</h3><p><img src="./%E6%9B%B2%E7%BA%BF%E8%B0%83%E6%95%B4-%E4%B8%8B%E5%87%B8-%E5%87%8F%E6%9A%97.jpg" alt="下凸曲线将画面整体调暗"></p><p>与上凸曲线刚好相反，下凸曲线都在 $y = x$ 直线之下，每个点都不同程度的调暗了一点，所以整体画面变暗。</p><h3 id="S-型曲线"><a href="#S-型曲线" class="headerlink" title="S 型曲线"></a>S 型曲线</h3><p><img src="./%E6%9B%B2%E7%BA%BF%E8%B0%83%E6%95%B4-S%E5%9E%8B-%E6%8F%90%E9%AB%98%E5%AF%B9%E6%AF%94%E5%BA%A6.jpg" alt="S 型曲线提高画面对比度"></p><p>S 型曲线最常见，通常修图都会先拉起对比度，也就是调了个 S 型曲线；刚刚也说过，S 型曲线左边暗部在 $y = x$ 之下，右边亮部在 $y = x$ 之上，相当于把暗的点调的更暗，把亮的点调得更亮，于是明暗差异变大，对比度也就提高了。</p><h3 id="反-S-型曲线"><a href="#反-S-型曲线" class="headerlink" title="反 S 型曲线"></a>反 S 型曲线</h3><p><img src="./%E6%9B%B2%E7%BA%BF%E8%B0%83%E6%95%B4-%E5%8F%8DS%E5%9E%8B-%E9%99%8D%E4%BD%8E%E5%AF%B9%E6%AF%94%E5%BA%A6.jpg" alt="反 S 型曲线降低对比度"></p><p>反 S 型曲线与 S 型曲线方向看起来相反，作用也刚好相反，它是把暗部调亮，亮部调暗，明暗差异变小，用来降低对比度的。</p><h3 id="反对角线"><a href="#反对角线" class="headerlink" title="反对角线"></a>反对角线</h3><p><img src="./%E6%9B%B2%E7%BA%BF%E8%B0%83%E6%95%B4-%E5%8F%8D%E5%AF%B9%E8%A7%92%E7%BA%BF-%E5%8F%8D%E7%9B%B8.jpg" alt="反对角线颜色反相"></p><p>对比初始直线，这里反对角线其实就是 $y = -x$ 直线，相当于把所有明暗亮度对称颠倒过来，这里的亮度也包括相位，于是所有颜色反相了，看起来就是将图片反色处理了。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="http://academy.fengniao.com/322/3228845_all.html#p3228845" rel="external nofollow noopener noreferrer" target="_blank">如何读懂直方图</a></li><li><a href="https://www.zhihu.com/question/20511799" rel="external nofollow noopener noreferrer" target="_blank">如何看懂照片的直方图？</a></li><li><a href="http://www.nphoto.net/news/2010-04/28/6e47b1395e6f0f5d.shtml" rel="external nofollow noopener noreferrer" target="_blank">『摄影入门』怎样知道照片曝光是否合适？直方图！</a></li><li><a href="http://www.uisdc.com/ps-curve-skill" rel="external nofollow noopener noreferrer" target="_blank">教你轻松掌握PS曲线工具</a></li><li><a href="http://www.jb51.net/photoshop/465856.html" rel="external nofollow noopener noreferrer" target="_blank">ps曲线工具的详细使用方法介绍</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;引入&quot;&gt;&lt;a href=&quot;#引入&quot; class=&quot;headerlink&quot; title=&quot;引入&quot;&gt;&lt;/a&gt;引入&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;「曲线工具」&lt;/strong&gt;这个东西，经常修图或做视频的人一定不陌生，它在很多图像视频工具中都有出现，比如 AE、PR、P
      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://kbservice.github.io/wiki/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
      <category term="图形图像" scheme="https://kbservice.github.io/wiki/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%9B%BE%E5%BD%A2%E5%9B%BE%E5%83%8F/"/>
    
    
      <category term="图像格式" scheme="https://kbservice.github.io/wiki/tags/%E5%9B%BE%E5%83%8F%E6%A0%BC%E5%BC%8F/"/>
    
  </entry>
  
</feed>
